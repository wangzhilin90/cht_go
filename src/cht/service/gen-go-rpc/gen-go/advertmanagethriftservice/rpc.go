// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package advertmanagethriftservice

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - Type
//  - Limit
//  - ChengHuiTongTraceLog
type AdvertManageRequestStruct struct {
  Type int32 `thrift:"type,1" db:"type" json:"type"`
  Limit int32 `thrift:"limit,2" db:"limit" json:"limit"`
  ChengHuiTongTraceLog string `thrift:"chengHuiTongTraceLog,3" db:"chengHuiTongTraceLog" json:"chengHuiTongTraceLog"`
}

func NewAdvertManageRequestStruct() *AdvertManageRequestStruct {
  return &AdvertManageRequestStruct{}
}


func (p *AdvertManageRequestStruct) GetType() int32 {
  return p.Type
}

func (p *AdvertManageRequestStruct) GetLimit() int32 {
  return p.Limit
}

func (p *AdvertManageRequestStruct) GetChengHuiTongTraceLog() string {
  return p.ChengHuiTongTraceLog
}
func (p *AdvertManageRequestStruct) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *AdvertManageRequestStruct)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Type = v
}
  return nil
}

func (p *AdvertManageRequestStruct)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Limit = v
}
  return nil
}

func (p *AdvertManageRequestStruct)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.ChengHuiTongTraceLog = v
}
  return nil
}

func (p *AdvertManageRequestStruct) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("AdvertManageRequestStruct"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *AdvertManageRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("type", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:type: ", p), err) }
  if err := oprot.WriteI32(int32(p.Type)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.type (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:type: ", p), err) }
  return err
}

func (p *AdvertManageRequestStruct) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("limit", thrift.I32, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:limit: ", p), err) }
  if err := oprot.WriteI32(int32(p.Limit)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.limit (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:limit: ", p), err) }
  return err
}

func (p *AdvertManageRequestStruct) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("chengHuiTongTraceLog", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:chengHuiTongTraceLog: ", p), err) }
  if err := oprot.WriteString(string(p.ChengHuiTongTraceLog)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.chengHuiTongTraceLog (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:chengHuiTongTraceLog: ", p), err) }
  return err
}

func (p *AdvertManageRequestStruct) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("AdvertManageRequestStruct(%+v)", *p)
}

// Attributes:
//  - ID
//  - Type
//  - Img
//  - Adverturl
//  - Title
//  - Addtime
//  - Adduser
//  - Status
//  - Fid
//  - Starttime
//  - Endtime
type AdvertManageStruct struct {
  ID int32 `thrift:"id,1" db:"id" json:"id"`
  Type int32 `thrift:"type,2" db:"type" json:"type"`
  Img string `thrift:"img,3" db:"img" json:"img"`
  Adverturl string `thrift:"adverturl,4" db:"adverturl" json:"adverturl"`
  Title string `thrift:"title,5" db:"title" json:"title"`
  Addtime int32 `thrift:"addtime,6" db:"addtime" json:"addtime"`
  Adduser int32 `thrift:"adduser,7" db:"adduser" json:"adduser"`
  Status int32 `thrift:"status,8" db:"status" json:"status"`
  Fid int32 `thrift:"fid,9" db:"fid" json:"fid"`
  Starttime int32 `thrift:"starttime,10" db:"starttime" json:"starttime"`
  Endtime int32 `thrift:"endtime,11" db:"endtime" json:"endtime"`
}

func NewAdvertManageStruct() *AdvertManageStruct {
  return &AdvertManageStruct{}
}


func (p *AdvertManageStruct) GetID() int32 {
  return p.ID
}

func (p *AdvertManageStruct) GetType() int32 {
  return p.Type
}

func (p *AdvertManageStruct) GetImg() string {
  return p.Img
}

func (p *AdvertManageStruct) GetAdverturl() string {
  return p.Adverturl
}

func (p *AdvertManageStruct) GetTitle() string {
  return p.Title
}

func (p *AdvertManageStruct) GetAddtime() int32 {
  return p.Addtime
}

func (p *AdvertManageStruct) GetAdduser() int32 {
  return p.Adduser
}

func (p *AdvertManageStruct) GetStatus() int32 {
  return p.Status
}

func (p *AdvertManageStruct) GetFid() int32 {
  return p.Fid
}

func (p *AdvertManageStruct) GetStarttime() int32 {
  return p.Starttime
}

func (p *AdvertManageStruct) GetEndtime() int32 {
  return p.Endtime
}
func (p *AdvertManageStruct) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    case 5:
      if err := p.ReadField5(iprot); err != nil {
        return err
      }
    case 6:
      if err := p.ReadField6(iprot); err != nil {
        return err
      }
    case 7:
      if err := p.ReadField7(iprot); err != nil {
        return err
      }
    case 8:
      if err := p.ReadField8(iprot); err != nil {
        return err
      }
    case 9:
      if err := p.ReadField9(iprot); err != nil {
        return err
      }
    case 10:
      if err := p.ReadField10(iprot); err != nil {
        return err
      }
    case 11:
      if err := p.ReadField11(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *AdvertManageStruct)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ID = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Type = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.Img = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.Adverturl = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField5(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 5: ", err)
} else {
  p.Title = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField6(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 6: ", err)
} else {
  p.Addtime = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField7(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 7: ", err)
} else {
  p.Adduser = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField8(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 8: ", err)
} else {
  p.Status = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField9(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 9: ", err)
} else {
  p.Fid = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField10(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 10: ", err)
} else {
  p.Starttime = v
}
  return nil
}

func (p *AdvertManageStruct)  ReadField11(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 11: ", err)
} else {
  p.Endtime = v
}
  return nil
}

func (p *AdvertManageStruct) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("AdvertManageStruct"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
    if err := p.writeField7(oprot); err != nil { return err }
    if err := p.writeField8(oprot); err != nil { return err }
    if err := p.writeField9(oprot); err != nil { return err }
    if err := p.writeField10(oprot); err != nil { return err }
    if err := p.writeField11(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *AdvertManageStruct) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:id: ", p), err) }
  if err := oprot.WriteI32(int32(p.ID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.id (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:id: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("type", thrift.I32, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:type: ", p), err) }
  if err := oprot.WriteI32(int32(p.Type)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.type (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:type: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("img", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:img: ", p), err) }
  if err := oprot.WriteString(string(p.Img)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.img (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:img: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("adverturl", thrift.STRING, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:adverturl: ", p), err) }
  if err := oprot.WriteString(string(p.Adverturl)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.adverturl (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:adverturl: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("title", thrift.STRING, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:title: ", p), err) }
  if err := oprot.WriteString(string(p.Title)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.title (5) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:title: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("addtime", thrift.I32, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:addtime: ", p), err) }
  if err := oprot.WriteI32(int32(p.Addtime)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.addtime (6) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:addtime: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField7(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("adduser", thrift.I32, 7); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:adduser: ", p), err) }
  if err := oprot.WriteI32(int32(p.Adduser)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.adduser (7) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 7:adduser: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField8(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("status", thrift.I32, 8); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:status: ", p), err) }
  if err := oprot.WriteI32(int32(p.Status)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.status (8) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 8:status: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField9(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("fid", thrift.I32, 9); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:fid: ", p), err) }
  if err := oprot.WriteI32(int32(p.Fid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.fid (9) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 9:fid: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField10(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("starttime", thrift.I32, 10); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:starttime: ", p), err) }
  if err := oprot.WriteI32(int32(p.Starttime)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.starttime (10) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 10:starttime: ", p), err) }
  return err
}

func (p *AdvertManageStruct) writeField11(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("endtime", thrift.I32, 11); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:endtime: ", p), err) }
  if err := oprot.WriteI32(int32(p.Endtime)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.endtime (11) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 11:endtime: ", p), err) }
  return err
}

func (p *AdvertManageStruct) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("AdvertManageStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - Msg
//  - AdvertManageList
type AdvertManageResponseStruct struct {
  Status int32 `thrift:"status,1" db:"status" json:"status"`
  Msg string `thrift:"msg,2" db:"msg" json:"msg"`
  AdvertManageList []*AdvertManageStruct `thrift:"advertManageList,3" db:"advertManageList" json:"advertManageList"`
}

func NewAdvertManageResponseStruct() *AdvertManageResponseStruct {
  return &AdvertManageResponseStruct{}
}


func (p *AdvertManageResponseStruct) GetStatus() int32 {
  return p.Status
}

func (p *AdvertManageResponseStruct) GetMsg() string {
  return p.Msg
}

func (p *AdvertManageResponseStruct) GetAdvertManageList() []*AdvertManageStruct {
  return p.AdvertManageList
}
func (p *AdvertManageResponseStruct) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *AdvertManageResponseStruct)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Status = v
}
  return nil
}

func (p *AdvertManageResponseStruct)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Msg = v
}
  return nil
}

func (p *AdvertManageResponseStruct)  ReadField3(iprot thrift.TProtocol) error {
  _, size, err := iprot.ReadListBegin()
  if err != nil {
    return thrift.PrependError("error reading list begin: ", err)
  }
  tSlice := make([]*AdvertManageStruct, 0, size)
  p.AdvertManageList =  tSlice
  for i := 0; i < size; i ++ {
    _elem0 := &AdvertManageStruct{}
    if err := _elem0.Read(iprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem0), err)
    }
    p.AdvertManageList = append(p.AdvertManageList, _elem0)
  }
  if err := iprot.ReadListEnd(); err != nil {
    return thrift.PrependError("error reading list end: ", err)
  }
  return nil
}

func (p *AdvertManageResponseStruct) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("AdvertManageResponseStruct"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *AdvertManageResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err) }
  if err := oprot.WriteI32(int32(p.Status)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err) }
  return err
}

func (p *AdvertManageResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("msg", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:msg: ", p), err) }
  if err := oprot.WriteString(string(p.Msg)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.msg (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:msg: ", p), err) }
  return err
}

func (p *AdvertManageResponseStruct) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("advertManageList", thrift.LIST, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:advertManageList: ", p), err) }
  if err := oprot.WriteListBegin(thrift.STRUCT, len(p.AdvertManageList)); err != nil {
    return thrift.PrependError("error writing list begin: ", err)
  }
  for _, v := range p.AdvertManageList {
    if err := v.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
    }
  }
  if err := oprot.WriteListEnd(); err != nil {
    return thrift.PrependError("error writing list end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:advertManageList: ", p), err) }
  return err
}

func (p *AdvertManageResponseStruct) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("AdvertManageResponseStruct(%+v)", *p)
}

type AdvertManageThriftService interface {
  // Parameters:
  //  - RequestObj
  GetAdvertManage(requestObj *AdvertManageRequestStruct) (r *AdvertManageResponseStruct, err error)
}

type AdvertManageThriftServiceClient struct {
  Transport thrift.TTransport
  ProtocolFactory thrift.TProtocolFactory
  InputProtocol thrift.TProtocol
  OutputProtocol thrift.TProtocol
  SeqId int32
}

func NewAdvertManageThriftServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *AdvertManageThriftServiceClient {
  return &AdvertManageThriftServiceClient{Transport: t,
    ProtocolFactory: f,
    InputProtocol: f.GetProtocol(t),
    OutputProtocol: f.GetProtocol(t),
    SeqId: 0,
  }
}

func NewAdvertManageThriftServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *AdvertManageThriftServiceClient {
  return &AdvertManageThriftServiceClient{Transport: t,
    ProtocolFactory: nil,
    InputProtocol: iprot,
    OutputProtocol: oprot,
    SeqId: 0,
  }
}

// Parameters:
//  - RequestObj
func (p *AdvertManageThriftServiceClient) GetAdvertManage(requestObj *AdvertManageRequestStruct) (r *AdvertManageResponseStruct, err error) {
  if err = p.sendGetAdvertManage(requestObj); err != nil { return }
  return p.recvGetAdvertManage()
}

func (p *AdvertManageThriftServiceClient) sendGetAdvertManage(requestObj *AdvertManageRequestStruct)(err error) {
  oprot := p.OutputProtocol
  if oprot == nil {
    oprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.OutputProtocol = oprot
  }
  p.SeqId++
  if err = oprot.WriteMessageBegin("getAdvertManage", thrift.CALL, p.SeqId); err != nil {
      return
  }
  args := AdvertManageThriftServiceGetAdvertManageArgs{
  RequestObj : requestObj,
  }
  if err = args.Write(oprot); err != nil {
      return
  }
  if err = oprot.WriteMessageEnd(); err != nil {
      return
  }
  return oprot.Flush()
}


func (p *AdvertManageThriftServiceClient) recvGetAdvertManage() (value *AdvertManageResponseStruct, err error) {
  iprot := p.InputProtocol
  if iprot == nil {
    iprot = p.ProtocolFactory.GetProtocol(p.Transport)
    p.InputProtocol = iprot
  }
  method, mTypeId, seqId, err := iprot.ReadMessageBegin()
  if err != nil {
    return
  }
  if method != "getAdvertManage" {
    err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "getAdvertManage failed: wrong method name")
    return
  }
  if p.SeqId != seqId {
    err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "getAdvertManage failed: out of sequence response")
    return
  }
  if mTypeId == thrift.EXCEPTION {
    error1 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
    var error2 error
    error2, err = error1.Read(iprot)
    if err != nil {
      return
    }
    if err = iprot.ReadMessageEnd(); err != nil {
      return
    }
    err = error2
    return
  }
  if mTypeId != thrift.REPLY {
    err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "getAdvertManage failed: invalid message type")
    return
  }
  result := AdvertManageThriftServiceGetAdvertManageResult{}
  if err = result.Read(iprot); err != nil {
    return
  }
  if err = iprot.ReadMessageEnd(); err != nil {
    return
  }
  value = result.GetSuccess()
  return
}


type AdvertManageThriftServiceProcessor struct {
  processorMap map[string]thrift.TProcessorFunction
  handler AdvertManageThriftService
}

func (p *AdvertManageThriftServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
  p.processorMap[key] = processor
}

func (p *AdvertManageThriftServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
  processor, ok = p.processorMap[key]
  return processor, ok
}

func (p *AdvertManageThriftServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
  return p.processorMap
}

func NewAdvertManageThriftServiceProcessor(handler AdvertManageThriftService) *AdvertManageThriftServiceProcessor {

  self3 := &AdvertManageThriftServiceProcessor{handler:handler, processorMap:make(map[string]thrift.TProcessorFunction)}
  self3.processorMap["getAdvertManage"] = &advertManageThriftServiceProcessorGetAdvertManage{handler:handler}
return self3
}

func (p *AdvertManageThriftServiceProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  name, _, seqId, err := iprot.ReadMessageBegin()
  if err != nil { return false, err }
  if processor, ok := p.GetProcessorFunction(name); ok {
    return processor.Process(seqId, iprot, oprot)
  }
  iprot.Skip(thrift.STRUCT)
  iprot.ReadMessageEnd()
  x4 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function " + name)
  oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
  x4.Write(oprot)
  oprot.WriteMessageEnd()
  oprot.Flush()
  return false, x4

}

type advertManageThriftServiceProcessorGetAdvertManage struct {
  handler AdvertManageThriftService
}

func (p *advertManageThriftServiceProcessorGetAdvertManage) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := AdvertManageThriftServiceGetAdvertManageArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("getAdvertManage", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := AdvertManageThriftServiceGetAdvertManageResult{}
var retval *AdvertManageResponseStruct
  var err2 error
  if retval, err2 = p.handler.GetAdvertManage(args.RequestObj); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getAdvertManage: " + err2.Error())
    oprot.WriteMessageBegin("getAdvertManage", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("getAdvertManage", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - RequestObj
type AdvertManageThriftServiceGetAdvertManageArgs struct {
  RequestObj *AdvertManageRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewAdvertManageThriftServiceGetAdvertManageArgs() *AdvertManageThriftServiceGetAdvertManageArgs {
  return &AdvertManageThriftServiceGetAdvertManageArgs{}
}

var AdvertManageThriftServiceGetAdvertManageArgs_RequestObj_DEFAULT *AdvertManageRequestStruct
func (p *AdvertManageThriftServiceGetAdvertManageArgs) GetRequestObj() *AdvertManageRequestStruct {
  if !p.IsSetRequestObj() {
    return AdvertManageThriftServiceGetAdvertManageArgs_RequestObj_DEFAULT
  }
return p.RequestObj
}
func (p *AdvertManageThriftServiceGetAdvertManageArgs) IsSetRequestObj() bool {
  return p.RequestObj != nil
}

func (p *AdvertManageThriftServiceGetAdvertManageArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *AdvertManageThriftServiceGetAdvertManageArgs)  ReadField1(iprot thrift.TProtocol) error {
  p.RequestObj = &AdvertManageRequestStruct{}
  if err := p.RequestObj.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
  }
  return nil
}

func (p *AdvertManageThriftServiceGetAdvertManageArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getAdvertManage_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *AdvertManageThriftServiceGetAdvertManageArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err) }
  if err := p.RequestObj.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err) }
  return err
}

func (p *AdvertManageThriftServiceGetAdvertManageArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("AdvertManageThriftServiceGetAdvertManageArgs(%+v)", *p)
}

// Attributes:
//  - Success
type AdvertManageThriftServiceGetAdvertManageResult struct {
  Success *AdvertManageResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewAdvertManageThriftServiceGetAdvertManageResult() *AdvertManageThriftServiceGetAdvertManageResult {
  return &AdvertManageThriftServiceGetAdvertManageResult{}
}

var AdvertManageThriftServiceGetAdvertManageResult_Success_DEFAULT *AdvertManageResponseStruct
func (p *AdvertManageThriftServiceGetAdvertManageResult) GetSuccess() *AdvertManageResponseStruct {
  if !p.IsSetSuccess() {
    return AdvertManageThriftServiceGetAdvertManageResult_Success_DEFAULT
  }
return p.Success
}
func (p *AdvertManageThriftServiceGetAdvertManageResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *AdvertManageThriftServiceGetAdvertManageResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if err := p.ReadField0(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *AdvertManageThriftServiceGetAdvertManageResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &AdvertManageResponseStruct{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *AdvertManageThriftServiceGetAdvertManageResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getAdvertManage_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *AdvertManageThriftServiceGetAdvertManageResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *AdvertManageThriftServiceGetAdvertManageResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("AdvertManageThriftServiceGetAdvertManageResult(%+v)", *p)
}


