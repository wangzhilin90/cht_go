// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package makeborrowservice

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - ID
//  - BorrowType
//  - UserID
//  - Title
//  - Content
//  - Litpic
//  - BorrowUse
//  - IsDatetype
//  - TimeLimit
//  - Style
//  - Account
//  - AccountTender
//  - Apr
//  - AprAdd
//  - MortgageFile
//  - IsDxb
//  - Pwd
//  - LowestAccount
//  - MostAccount
//  - ValidTime
//  - Award
//  - Bonus
//  - IsFalse
//  - OpenAccount
//  - OpenBorrow
//  - OpenTender
//  - OpenCredit
//  - OpenZiliao
//  - Material
//  - Addtime
//  - Addip
//  - Status
//  - RutenAllnumber
//  - RutenNumber
//  - VerifyUser
//  - VerifyTime
//  - VerifyRemark
//  - ReviewUser
//  - ReviewTimeLocal
//  - ReviewTime
//  - Secured
//  - Zhuanrangren
//  - Huodong
//  - SignDate
//  - Subledger
//  - RepaySign
//  - AutoTenderLock
//  - IsAuto
//  - IsCheck
//  - ReviewLock
//  - FeeRate
//  - BorrowName
//  - VipLevelLimit
type MakeBorrowRequestStruct struct {
	ID              int32  `thrift:"id,1" db:"id" json:"id"`
	BorrowType      int32  `thrift:"borrow_type,2" db:"borrow_type" json:"borrow_type"`
	UserID          int32  `thrift:"user_id,3" db:"user_id" json:"user_id"`
	Title           string `thrift:"title,4" db:"title" json:"title"`
	Content         string `thrift:"content,5" db:"content" json:"content"`
	Litpic          string `thrift:"litpic,6" db:"litpic" json:"litpic"`
	BorrowUse       int32  `thrift:"borrow_use,7" db:"borrow_use" json:"borrow_use"`
	IsDatetype      int32  `thrift:"is_datetype,8" db:"is_datetype" json:"is_datetype"`
	TimeLimit       int32  `thrift:"time_limit,9" db:"time_limit" json:"time_limit"`
	Style           int32  `thrift:"style,10" db:"style" json:"style"`
	Account         string `thrift:"account,11" db:"account" json:"account"`
	AccountTender   string `thrift:"account_tender,12" db:"account_tender" json:"account_tender"`
	Apr             string `thrift:"apr,13" db:"apr" json:"apr"`
	AprAdd          string `thrift:"apr_add,14" db:"apr_add" json:"apr_add"`
	MortgageFile    string `thrift:"mortgage_file,15" db:"mortgage_file" json:"mortgage_file"`
	IsDxb           int32  `thrift:"is_dxb,16" db:"is_dxb" json:"is_dxb"`
	Pwd             string `thrift:"pwd,17" db:"pwd" json:"pwd"`
	LowestAccount   string `thrift:"lowest_account,18" db:"lowest_account" json:"lowest_account"`
	MostAccount     string `thrift:"most_account,19" db:"most_account" json:"most_account"`
	ValidTime       int32  `thrift:"valid_time,20" db:"valid_time" json:"valid_time"`
	Award           int32  `thrift:"award,21" db:"award" json:"award"`
	Bonus           string `thrift:"bonus,22" db:"bonus" json:"bonus"`
	IsFalse         int32  `thrift:"is_false,23" db:"is_false" json:"is_false"`
	OpenAccount     int32  `thrift:"open_account,24" db:"open_account" json:"open_account"`
	OpenBorrow      int32  `thrift:"open_borrow,25" db:"open_borrow" json:"open_borrow"`
	OpenTender      int32  `thrift:"open_tender,26" db:"open_tender" json:"open_tender"`
	OpenCredit      int32  `thrift:"open_credit,27" db:"open_credit" json:"open_credit"`
	OpenZiliao      int32  `thrift:"open_ziliao,28" db:"open_ziliao" json:"open_ziliao"`
	Material        int32  `thrift:"material,29" db:"material" json:"material"`
	Addtime         int32  `thrift:"addtime,30" db:"addtime" json:"addtime"`
	Addip           string `thrift:"addip,31" db:"addip" json:"addip"`
	Status          int32  `thrift:"status,32" db:"status" json:"status"`
	RutenAllnumber  int32  `thrift:"ruten_allnumber,33" db:"ruten_allnumber" json:"ruten_allnumber"`
	RutenNumber     int32  `thrift:"ruten_number,34" db:"ruten_number" json:"ruten_number"`
	VerifyUser      int32  `thrift:"verify_user,35" db:"verify_user" json:"verify_user"`
	VerifyTime      int32  `thrift:"verify_time,36" db:"verify_time" json:"verify_time"`
	VerifyRemark    string `thrift:"verify_remark,37" db:"verify_remark" json:"verify_remark"`
	ReviewUser      int32  `thrift:"review_user,38" db:"review_user" json:"review_user"`
	ReviewTimeLocal int32  `thrift:"review_time_local,39" db:"review_time_local" json:"review_time_local"`
	ReviewTime      int32  `thrift:"review_time,40" db:"review_time" json:"review_time"`
	Secured         string `thrift:"secured,41" db:"secured" json:"secured"`
	Zhuanrangren    string `thrift:"zhuanrangren,42" db:"zhuanrangren" json:"zhuanrangren"`
	Huodong         int32  `thrift:"huodong,43" db:"huodong" json:"huodong"`
	SignDate        string `thrift:"sign_date,44" db:"sign_date" json:"sign_date"`
	Subledger       int32  `thrift:"subledger,45" db:"subledger" json:"subledger"`
	RepaySign       int32  `thrift:"repay_sign,46" db:"repay_sign" json:"repay_sign"`
	AutoTenderLock  int32  `thrift:"auto_tender_lock,47" db:"auto_tender_lock" json:"auto_tender_lock"`
	IsAuto          int32  `thrift:"is_auto,48" db:"is_auto" json:"is_auto"`
	IsCheck         int32  `thrift:"is_check,49" db:"is_check" json:"is_check"`
	ReviewLock      int32  `thrift:"review_lock,50" db:"review_lock" json:"review_lock"`
	FeeRate         string `thrift:"fee_rate,51" db:"fee_rate" json:"fee_rate"`
	BorrowName      string `thrift:"borrow_name,52" db:"borrow_name" json:"borrow_name"`
	VipLevelLimit   int32  `thrift:"vip_level_limit,53" db:"vip_level_limit" json:"vip_level_limit"`
}

func (p *MakeBorrowRequestStruct) GetID() int32 {
	return p.ID
}

func (p *MakeBorrowRequestStruct) GetBorrowType() int32 {
	return p.BorrowType
}

func (p *MakeBorrowRequestStruct) GetUserID() int32 {
	return p.UserID
}

func (p *MakeBorrowRequestStruct) GetTitle() string {
	return p.Title
}

func (p *MakeBorrowRequestStruct) GetContent() string {
	return p.Content
}

func (p *MakeBorrowRequestStruct) GetLitpic() string {
	return p.Litpic
}

func (p *MakeBorrowRequestStruct) GetBorrowUse() int32 {
	return p.BorrowUse
}

func (p *MakeBorrowRequestStruct) GetIsDatetype() int32 {
	return p.IsDatetype
}

func (p *MakeBorrowRequestStruct) GetTimeLimit() int32 {
	return p.TimeLimit
}

func (p *MakeBorrowRequestStruct) GetStyle() int32 {
	return p.Style
}

func (p *MakeBorrowRequestStruct) GetAccount() string {
	return p.Account
}

func (p *MakeBorrowRequestStruct) GetAccountTender() string {
	return p.AccountTender
}

func (p *MakeBorrowRequestStruct) GetApr() string {
	return p.Apr
}

func (p *MakeBorrowRequestStruct) GetAprAdd() string {
	return p.AprAdd
}

func (p *MakeBorrowRequestStruct) GetMortgageFile() string {
	return p.MortgageFile
}

func (p *MakeBorrowRequestStruct) GetIsDxb() int32 {
	return p.IsDxb
}

func (p *MakeBorrowRequestStruct) GetPwd() string {
	return p.Pwd
}

func (p *MakeBorrowRequestStruct) GetLowestAccount() string {
	return p.LowestAccount
}

func (p *MakeBorrowRequestStruct) GetMostAccount() string {
	return p.MostAccount
}

func (p *MakeBorrowRequestStruct) GetValidTime() int32 {
	return p.ValidTime
}

func (p *MakeBorrowRequestStruct) GetAward() int32 {
	return p.Award
}

func (p *MakeBorrowRequestStruct) GetBonus() string {
	return p.Bonus
}

func (p *MakeBorrowRequestStruct) GetIsFalse() int32 {
	return p.IsFalse
}

func (p *MakeBorrowRequestStruct) GetOpenAccount() int32 {
	return p.OpenAccount
}

func (p *MakeBorrowRequestStruct) GetOpenBorrow() int32 {
	return p.OpenBorrow
}

func (p *MakeBorrowRequestStruct) GetOpenTender() int32 {
	return p.OpenTender
}

func (p *MakeBorrowRequestStruct) GetOpenCredit() int32 {
	return p.OpenCredit
}

func (p *MakeBorrowRequestStruct) GetOpenZiliao() int32 {
	return p.OpenZiliao
}

func (p *MakeBorrowRequestStruct) GetMaterial() int32 {
	return p.Material
}

func (p *MakeBorrowRequestStruct) GetAddtime() int32 {
	return p.Addtime
}

func (p *MakeBorrowRequestStruct) GetAddip() string {
	return p.Addip
}

func (p *MakeBorrowRequestStruct) GetStatus() int32 {
	return p.Status
}

func (p *MakeBorrowRequestStruct) GetRutenAllnumber() int32 {
	return p.RutenAllnumber
}

func (p *MakeBorrowRequestStruct) GetRutenNumber() int32 {
	return p.RutenNumber
}

func (p *MakeBorrowRequestStruct) GetVerifyUser() int32 {
	return p.VerifyUser
}

func (p *MakeBorrowRequestStruct) GetVerifyTime() int32 {
	return p.VerifyTime
}

func (p *MakeBorrowRequestStruct) GetVerifyRemark() string {
	return p.VerifyRemark
}

func (p *MakeBorrowRequestStruct) GetReviewUser() int32 {
	return p.ReviewUser
}

func (p *MakeBorrowRequestStruct) GetReviewTimeLocal() int32 {
	return p.ReviewTimeLocal
}

func (p *MakeBorrowRequestStruct) GetReviewTime() int32 {
	return p.ReviewTime
}

func (p *MakeBorrowRequestStruct) GetSecured() string {
	return p.Secured
}

func (p *MakeBorrowRequestStruct) GetZhuanrangren() string {
	return p.Zhuanrangren
}

func (p *MakeBorrowRequestStruct) GetHuodong() int32 {
	return p.Huodong
}

func (p *MakeBorrowRequestStruct) GetSignDate() string {
	return p.SignDate
}

func (p *MakeBorrowRequestStruct) GetSubledger() int32 {
	return p.Subledger
}

func (p *MakeBorrowRequestStruct) GetRepaySign() int32 {
	return p.RepaySign
}

func (p *MakeBorrowRequestStruct) GetAutoTenderLock() int32 {
	return p.AutoTenderLock
}

func (p *MakeBorrowRequestStruct) GetIsAuto() int32 {
	return p.IsAuto
}

func (p *MakeBorrowRequestStruct) GetIsCheck() int32 {
	return p.IsCheck
}

func (p *MakeBorrowRequestStruct) GetReviewLock() int32 {
	return p.ReviewLock
}

func (p *MakeBorrowRequestStruct) GetFeeRate() string {
	return p.FeeRate
}

func (p *MakeBorrowRequestStruct) GetBorrowName() string {
	return p.BorrowName
}

func (p *MakeBorrowRequestStruct) GetVipLevelLimit() int32 {
	return p.VipLevelLimit
}
func (p *MakeBorrowRequestStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.ReadField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.ReadField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.ReadField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.ReadField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.ReadField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.ReadField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.ReadField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.ReadField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.ReadField20(iprot); err != nil {
				return err
			}
		case 21:
			if err := p.ReadField21(iprot); err != nil {
				return err
			}
		case 22:
			if err := p.ReadField22(iprot); err != nil {
				return err
			}
		case 23:
			if err := p.ReadField23(iprot); err != nil {
				return err
			}
		case 24:
			if err := p.ReadField24(iprot); err != nil {
				return err
			}
		case 25:
			if err := p.ReadField25(iprot); err != nil {
				return err
			}
		case 26:
			if err := p.ReadField26(iprot); err != nil {
				return err
			}
		case 27:
			if err := p.ReadField27(iprot); err != nil {
				return err
			}
		case 28:
			if err := p.ReadField28(iprot); err != nil {
				return err
			}
		case 29:
			if err := p.ReadField29(iprot); err != nil {
				return err
			}
		case 30:
			if err := p.ReadField30(iprot); err != nil {
				return err
			}
		case 31:
			if err := p.ReadField31(iprot); err != nil {
				return err
			}
		case 32:
			if err := p.ReadField32(iprot); err != nil {
				return err
			}
		case 33:
			if err := p.ReadField33(iprot); err != nil {
				return err
			}
		case 34:
			if err := p.ReadField34(iprot); err != nil {
				return err
			}
		case 35:
			if err := p.ReadField35(iprot); err != nil {
				return err
			}
		case 36:
			if err := p.ReadField36(iprot); err != nil {
				return err
			}
		case 37:
			if err := p.ReadField37(iprot); err != nil {
				return err
			}
		case 38:
			if err := p.ReadField38(iprot); err != nil {
				return err
			}
		case 39:
			if err := p.ReadField39(iprot); err != nil {
				return err
			}
		case 40:
			if err := p.ReadField40(iprot); err != nil {
				return err
			}
		case 41:
			if err := p.ReadField41(iprot); err != nil {
				return err
			}
		case 42:
			if err := p.ReadField42(iprot); err != nil {
				return err
			}
		case 43:
			if err := p.ReadField43(iprot); err != nil {
				return err
			}
		case 44:
			if err := p.ReadField44(iprot); err != nil {
				return err
			}
		case 45:
			if err := p.ReadField45(iprot); err != nil {
				return err
			}
		case 46:
			if err := p.ReadField46(iprot); err != nil {
				return err
			}
		case 47:
			if err := p.ReadField47(iprot); err != nil {
				return err
			}
		case 48:
			if err := p.ReadField48(iprot); err != nil {
				return err
			}
		case 49:
			if err := p.ReadField49(iprot); err != nil {
				return err
			}
		case 50:
			if err := p.ReadField50(iprot); err != nil {
				return err
			}
		case 51:
			if err := p.ReadField51(iprot); err != nil {
				return err
			}
		case 52:
			if err := p.ReadField52(iprot); err != nil {
				return err
			}
		case 53:
			if err := p.ReadField53(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.BorrowType = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.UserID = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Title = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Content = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Litpic = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.BorrowUse = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.IsDatetype = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.TimeLimit = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.Style = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.Account = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.AccountTender = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.Apr = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.AprAdd = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.MortgageFile = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.IsDxb = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.Pwd = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.LowestAccount = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.MostAccount = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.ValidTime = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField21(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 21: ", err)
	} else {
		p.Award = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField22(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 22: ", err)
	} else {
		p.Bonus = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField23(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 23: ", err)
	} else {
		p.IsFalse = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField24(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 24: ", err)
	} else {
		p.OpenAccount = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField25(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 25: ", err)
	} else {
		p.OpenBorrow = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField26(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 26: ", err)
	} else {
		p.OpenTender = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField27(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 27: ", err)
	} else {
		p.OpenCredit = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField28(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 28: ", err)
	} else {
		p.OpenZiliao = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField29(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 29: ", err)
	} else {
		p.Material = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField30(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 30: ", err)
	} else {
		p.Addtime = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField31(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 31: ", err)
	} else {
		p.Addip = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField32(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 32: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField33(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 33: ", err)
	} else {
		p.RutenAllnumber = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField34(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 34: ", err)
	} else {
		p.RutenNumber = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField35(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 35: ", err)
	} else {
		p.VerifyUser = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField36(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 36: ", err)
	} else {
		p.VerifyTime = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField37(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 37: ", err)
	} else {
		p.VerifyRemark = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField38(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 38: ", err)
	} else {
		p.ReviewUser = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField39(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 39: ", err)
	} else {
		p.ReviewTimeLocal = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField40(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 40: ", err)
	} else {
		p.ReviewTime = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField41(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 41: ", err)
	} else {
		p.Secured = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField42(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 42: ", err)
	} else {
		p.Zhuanrangren = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField43(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 43: ", err)
	} else {
		p.Huodong = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField44(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 44: ", err)
	} else {
		p.SignDate = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField45(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 45: ", err)
	} else {
		p.Subledger = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField46(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 46: ", err)
	} else {
		p.RepaySign = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField47(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 47: ", err)
	} else {
		p.AutoTenderLock = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField48(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 48: ", err)
	} else {
		p.IsAuto = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField49(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 49: ", err)
	} else {
		p.IsCheck = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField50(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 50: ", err)
	} else {
		p.ReviewLock = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField51(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 51: ", err)
	} else {
		p.FeeRate = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField52(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 52: ", err)
	} else {
		p.BorrowName = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) ReadField53(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 53: ", err)
	} else {
		p.VipLevelLimit = v
	}
	return nil
}

func (p *MakeBorrowRequestStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("MakeBorrowRequestStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
		if err := p.writeField10(oprot); err != nil {
			return err
		}
		if err := p.writeField11(oprot); err != nil {
			return err
		}
		if err := p.writeField12(oprot); err != nil {
			return err
		}
		if err := p.writeField13(oprot); err != nil {
			return err
		}
		if err := p.writeField14(oprot); err != nil {
			return err
		}
		if err := p.writeField15(oprot); err != nil {
			return err
		}
		if err := p.writeField16(oprot); err != nil {
			return err
		}
		if err := p.writeField17(oprot); err != nil {
			return err
		}
		if err := p.writeField18(oprot); err != nil {
			return err
		}
		if err := p.writeField19(oprot); err != nil {
			return err
		}
		if err := p.writeField20(oprot); err != nil {
			return err
		}
		if err := p.writeField21(oprot); err != nil {
			return err
		}
		if err := p.writeField22(oprot); err != nil {
			return err
		}
		if err := p.writeField23(oprot); err != nil {
			return err
		}
		if err := p.writeField24(oprot); err != nil {
			return err
		}
		if err := p.writeField25(oprot); err != nil {
			return err
		}
		if err := p.writeField26(oprot); err != nil {
			return err
		}
		if err := p.writeField27(oprot); err != nil {
			return err
		}
		if err := p.writeField28(oprot); err != nil {
			return err
		}
		if err := p.writeField29(oprot); err != nil {
			return err
		}
		if err := p.writeField30(oprot); err != nil {
			return err
		}
		if err := p.writeField31(oprot); err != nil {
			return err
		}
		if err := p.writeField32(oprot); err != nil {
			return err
		}
		if err := p.writeField33(oprot); err != nil {
			return err
		}
		if err := p.writeField34(oprot); err != nil {
			return err
		}
		if err := p.writeField35(oprot); err != nil {
			return err
		}
		if err := p.writeField36(oprot); err != nil {
			return err
		}
		if err := p.writeField37(oprot); err != nil {
			return err
		}
		if err := p.writeField38(oprot); err != nil {
			return err
		}
		if err := p.writeField39(oprot); err != nil {
			return err
		}
		if err := p.writeField40(oprot); err != nil {
			return err
		}
		if err := p.writeField41(oprot); err != nil {
			return err
		}
		if err := p.writeField42(oprot); err != nil {
			return err
		}
		if err := p.writeField43(oprot); err != nil {
			return err
		}
		if err := p.writeField44(oprot); err != nil {
			return err
		}
		if err := p.writeField45(oprot); err != nil {
			return err
		}
		if err := p.writeField46(oprot); err != nil {
			return err
		}
		if err := p.writeField47(oprot); err != nil {
			return err
		}
		if err := p.writeField48(oprot); err != nil {
			return err
		}
		if err := p.writeField49(oprot); err != nil {
			return err
		}
		if err := p.writeField50(oprot); err != nil {
			return err
		}
		if err := p.writeField51(oprot); err != nil {
			return err
		}
		if err := p.writeField52(oprot); err != nil {
			return err
		}
		if err := p.writeField53(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *MakeBorrowRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:id: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("borrow_type", thrift.I32, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:borrow_type: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BorrowType)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.borrow_type (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:borrow_type: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("user_id", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:user_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.UserID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.user_id (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:user_id: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("title", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:title: ", p), err)
	}
	if err := oprot.WriteString(string(p.Title)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.title (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:title: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("content", thrift.STRING, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:content: ", p), err)
	}
	if err := oprot.WriteString(string(p.Content)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.content (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:content: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("litpic", thrift.STRING, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:litpic: ", p), err)
	}
	if err := oprot.WriteString(string(p.Litpic)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.litpic (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:litpic: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("borrow_use", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:borrow_use: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BorrowUse)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.borrow_use (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:borrow_use: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_datetype", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:is_datetype: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsDatetype)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_datetype (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:is_datetype: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("time_limit", thrift.I32, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:time_limit: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.TimeLimit)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.time_limit (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:time_limit: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("style", thrift.I32, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:style: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Style)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.style (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:style: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("account", thrift.STRING, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:account: ", p), err)
	}
	if err := oprot.WriteString(string(p.Account)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.account (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:account: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("account_tender", thrift.STRING, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:account_tender: ", p), err)
	}
	if err := oprot.WriteString(string(p.AccountTender)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.account_tender (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:account_tender: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("apr", thrift.STRING, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:apr: ", p), err)
	}
	if err := oprot.WriteString(string(p.Apr)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.apr (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:apr: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("apr_add", thrift.STRING, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:apr_add: ", p), err)
	}
	if err := oprot.WriteString(string(p.AprAdd)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.apr_add (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:apr_add: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("mortgage_file", thrift.STRING, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:mortgage_file: ", p), err)
	}
	if err := oprot.WriteString(string(p.MortgageFile)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.mortgage_file (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:mortgage_file: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_dxb", thrift.I32, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:is_dxb: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsDxb)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_dxb (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:is_dxb: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("pwd", thrift.STRING, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:pwd: ", p), err)
	}
	if err := oprot.WriteString(string(p.Pwd)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.pwd (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:pwd: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("lowest_account", thrift.STRING, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:lowest_account: ", p), err)
	}
	if err := oprot.WriteString(string(p.LowestAccount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.lowest_account (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:lowest_account: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField19(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("most_account", thrift.STRING, 19); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:most_account: ", p), err)
	}
	if err := oprot.WriteString(string(p.MostAccount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.most_account (19) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 19:most_account: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField20(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("valid_time", thrift.I32, 20); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:valid_time: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ValidTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.valid_time (20) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 20:valid_time: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField21(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("award", thrift.I32, 21); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:award: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Award)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.award (21) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 21:award: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField22(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("bonus", thrift.STRING, 22); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:bonus: ", p), err)
	}
	if err := oprot.WriteString(string(p.Bonus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.bonus (22) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 22:bonus: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField23(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_false", thrift.I32, 23); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 23:is_false: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsFalse)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_false (23) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 23:is_false: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField24(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("open_account", thrift.I32, 24); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 24:open_account: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OpenAccount)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.open_account (24) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 24:open_account: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField25(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("open_borrow", thrift.I32, 25); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 25:open_borrow: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OpenBorrow)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.open_borrow (25) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 25:open_borrow: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField26(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("open_tender", thrift.I32, 26); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 26:open_tender: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OpenTender)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.open_tender (26) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 26:open_tender: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField27(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("open_credit", thrift.I32, 27); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 27:open_credit: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OpenCredit)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.open_credit (27) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 27:open_credit: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField28(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("open_ziliao", thrift.I32, 28); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 28:open_ziliao: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OpenZiliao)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.open_ziliao (28) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 28:open_ziliao: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField29(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("material", thrift.I32, 29); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 29:material: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Material)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.material (29) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 29:material: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField30(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("addtime", thrift.I32, 30); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 30:addtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Addtime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.addtime (30) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 30:addtime: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField31(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("addip", thrift.STRING, 31); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 31:addip: ", p), err)
	}
	if err := oprot.WriteString(string(p.Addip)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.addip (31) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 31:addip: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField32(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 32); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 32:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (32) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 32:status: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField33(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ruten_allnumber", thrift.I32, 33); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 33:ruten_allnumber: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RutenAllnumber)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.ruten_allnumber (33) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 33:ruten_allnumber: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField34(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("ruten_number", thrift.I32, 34); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 34:ruten_number: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RutenNumber)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.ruten_number (34) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 34:ruten_number: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField35(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("verify_user", thrift.I32, 35); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 35:verify_user: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VerifyUser)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.verify_user (35) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 35:verify_user: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField36(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("verify_time", thrift.I32, 36); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 36:verify_time: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VerifyTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.verify_time (36) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 36:verify_time: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField37(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("verify_remark", thrift.STRING, 37); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 37:verify_remark: ", p), err)
	}
	if err := oprot.WriteString(string(p.VerifyRemark)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.verify_remark (37) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 37:verify_remark: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField38(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("review_user", thrift.I32, 38); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 38:review_user: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ReviewUser)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.review_user (38) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 38:review_user: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField39(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("review_time_local", thrift.I32, 39); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 39:review_time_local: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ReviewTimeLocal)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.review_time_local (39) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 39:review_time_local: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField40(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("review_time", thrift.I32, 40); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 40:review_time: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ReviewTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.review_time (40) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 40:review_time: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField41(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("secured", thrift.STRING, 41); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 41:secured: ", p), err)
	}
	if err := oprot.WriteString(string(p.Secured)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.secured (41) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 41:secured: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField42(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("zhuanrangren", thrift.STRING, 42); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 42:zhuanrangren: ", p), err)
	}
	if err := oprot.WriteString(string(p.Zhuanrangren)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.zhuanrangren (42) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 42:zhuanrangren: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField43(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("huodong", thrift.I32, 43); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 43:huodong: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Huodong)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.huodong (43) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 43:huodong: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField44(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sign_date", thrift.STRING, 44); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 44:sign_date: ", p), err)
	}
	if err := oprot.WriteString(string(p.SignDate)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.sign_date (44) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 44:sign_date: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField45(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("subledger", thrift.I32, 45); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 45:subledger: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Subledger)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.subledger (45) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 45:subledger: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField46(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("repay_sign", thrift.I32, 46); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 46:repay_sign: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RepaySign)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.repay_sign (46) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 46:repay_sign: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField47(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("auto_tender_lock", thrift.I32, 47); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 47:auto_tender_lock: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.AutoTenderLock)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.auto_tender_lock (47) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 47:auto_tender_lock: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField48(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_auto", thrift.I32, 48); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 48:is_auto: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsAuto)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_auto (48) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 48:is_auto: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField49(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_check", thrift.I32, 49); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 49:is_check: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsCheck)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_check (49) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 49:is_check: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField50(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("review_lock", thrift.I32, 50); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 50:review_lock: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ReviewLock)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.review_lock (50) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 50:review_lock: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField51(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("fee_rate", thrift.STRING, 51); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 51:fee_rate: ", p), err)
	}
	if err := oprot.WriteString(string(p.FeeRate)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.fee_rate (51) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 51:fee_rate: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField52(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("borrow_name", thrift.STRING, 52); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 52:borrow_name: ", p), err)
	}
	if err := oprot.WriteString(string(p.BorrowName)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.borrow_name (52) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 52:borrow_name: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) writeField53(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("vip_level_limit", thrift.I32, 53); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 53:vip_level_limit: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VipLevelLimit)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.vip_level_limit (53) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 53:vip_level_limit: ", p), err)
	}
	return err
}

func (p *MakeBorrowRequestStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MakeBorrowRequestStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - Msg
type MakeBorrowResponseStruct struct {
	Status int32  `thrift:"status,1" db:"status" json:"status"`
	Msg    string `thrift:"msg,2" db:"msg" json:"msg"`
}

func NewMakeBorrowResponseStruct() *MakeBorrowResponseStruct {
	return &MakeBorrowResponseStruct{}
}

func (p *MakeBorrowResponseStruct) GetStatus() int32 {
	return p.Status
}

func (p *MakeBorrowResponseStruct) GetMsg() string {
	return p.Msg
}
func (p *MakeBorrowResponseStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *MakeBorrowResponseStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *MakeBorrowResponseStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *MakeBorrowResponseStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("MakeBorrowResponseStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *MakeBorrowResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err)
	}
	return err
}

func (p *MakeBorrowResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("msg", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:msg: ", p), err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.msg (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:msg: ", p), err)
	}
	return err
}

func (p *MakeBorrowResponseStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MakeBorrowResponseStruct(%+v)", *p)
}

type MakeBorrowThriftService interface {
	// Parameters:
	//  - RequestObj
	MakeBorrow(requestObj *MakeBorrowRequestStruct) (r *MakeBorrowResponseStruct, err error)
}

type MakeBorrowThriftServiceClient struct {
	Transport       thrift.TTransport
	ProtocolFactory thrift.TProtocolFactory
	InputProtocol   thrift.TProtocol
	OutputProtocol  thrift.TProtocol
	SeqId           int32
}

func NewMakeBorrowThriftServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *MakeBorrowThriftServiceClient {
	return &MakeBorrowThriftServiceClient{Transport: t,
		ProtocolFactory: f,
		InputProtocol:   f.GetProtocol(t),
		OutputProtocol:  f.GetProtocol(t),
		SeqId:           0,
	}
}

func NewMakeBorrowThriftServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *MakeBorrowThriftServiceClient {
	return &MakeBorrowThriftServiceClient{Transport: t,
		ProtocolFactory: nil,
		InputProtocol:   iprot,
		OutputProtocol:  oprot,
		SeqId:           0,
	}
}

// Parameters:
//  - RequestObj
func (p *MakeBorrowThriftServiceClient) MakeBorrow(requestObj *MakeBorrowRequestStruct) (r *MakeBorrowResponseStruct, err error) {
	if err = p.sendMakeBorrow(requestObj); err != nil {
		return
	}
	return p.recvMakeBorrow()
}

func (p *MakeBorrowThriftServiceClient) sendMakeBorrow(requestObj *MakeBorrowRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("makeBorrow", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := MakeBorrowThriftServiceMakeBorrowArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *MakeBorrowThriftServiceClient) recvMakeBorrow() (value *MakeBorrowResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "makeBorrow" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "makeBorrow failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "makeBorrow failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error0 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error1 error
		error1, err = error0.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error1
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "makeBorrow failed: invalid message type")
		return
	}
	result := MakeBorrowThriftServiceMakeBorrowResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

type MakeBorrowThriftServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      MakeBorrowThriftService
}

func (p *MakeBorrowThriftServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *MakeBorrowThriftServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *MakeBorrowThriftServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewMakeBorrowThriftServiceProcessor(handler MakeBorrowThriftService) *MakeBorrowThriftServiceProcessor {

	self2 := &MakeBorrowThriftServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self2.processorMap["makeBorrow"] = &makeBorrowThriftServiceProcessorMakeBorrow{handler: handler}
	return self2
}

func (p *MakeBorrowThriftServiceProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x3 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x3.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush()
	return false, x3

}

type makeBorrowThriftServiceProcessorMakeBorrow struct {
	handler MakeBorrowThriftService
}

func (p *makeBorrowThriftServiceProcessorMakeBorrow) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := MakeBorrowThriftServiceMakeBorrowArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("makeBorrow", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := MakeBorrowThriftServiceMakeBorrowResult{}
	var retval *MakeBorrowResponseStruct
	var err2 error
	if retval, err2 = p.handler.MakeBorrow(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing makeBorrow: "+err2.Error())
		oprot.WriteMessageBegin("makeBorrow", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("makeBorrow", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - RequestObj
type MakeBorrowThriftServiceMakeBorrowArgs struct {
	RequestObj *MakeBorrowRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewMakeBorrowThriftServiceMakeBorrowArgs() *MakeBorrowThriftServiceMakeBorrowArgs {
	return &MakeBorrowThriftServiceMakeBorrowArgs{}
}

var MakeBorrowThriftServiceMakeBorrowArgs_RequestObj_DEFAULT *MakeBorrowRequestStruct

func (p *MakeBorrowThriftServiceMakeBorrowArgs) GetRequestObj() *MakeBorrowRequestStruct {
	if !p.IsSetRequestObj() {
		return MakeBorrowThriftServiceMakeBorrowArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *MakeBorrowThriftServiceMakeBorrowArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *MakeBorrowThriftServiceMakeBorrowArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *MakeBorrowThriftServiceMakeBorrowArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &MakeBorrowRequestStruct{
		Title: " ",

		Content: " ",

		Litpic: " ",

		TimeLimit: 1,

		Account: "0.00",

		AccountTender: "0.00",

		Apr: "0.0000",

		AprAdd: "0.0000",

		MortgageFile: " ",

		Pwd: " ",

		LowestAccount: "50.00",

		MostAccount: "0.00",

		ValidTime: 1,

		Bonus: "0.00",

		OpenAccount: 1,

		OpenBorrow: 1,

		OpenTender: 1,

		OpenCredit: 1,

		OpenZiliao: 1,

		Addip: " ",

		VerifyRemark: " ",

		Secured: " ",

		Zhuanrangren: " ",

		SignDate: " ",

		FeeRate: "0.0000",

		BorrowName: " ",
	}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *MakeBorrowThriftServiceMakeBorrowArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("makeBorrow_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *MakeBorrowThriftServiceMakeBorrowArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *MakeBorrowThriftServiceMakeBorrowArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MakeBorrowThriftServiceMakeBorrowArgs(%+v)", *p)
}

// Attributes:
//  - Success
type MakeBorrowThriftServiceMakeBorrowResult struct {
	Success *MakeBorrowResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewMakeBorrowThriftServiceMakeBorrowResult() *MakeBorrowThriftServiceMakeBorrowResult {
	return &MakeBorrowThriftServiceMakeBorrowResult{}
}

var MakeBorrowThriftServiceMakeBorrowResult_Success_DEFAULT *MakeBorrowResponseStruct

func (p *MakeBorrowThriftServiceMakeBorrowResult) GetSuccess() *MakeBorrowResponseStruct {
	if !p.IsSetSuccess() {
		return MakeBorrowThriftServiceMakeBorrowResult_Success_DEFAULT
	}
	return p.Success
}
func (p *MakeBorrowThriftServiceMakeBorrowResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *MakeBorrowThriftServiceMakeBorrowResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *MakeBorrowThriftServiceMakeBorrowResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &MakeBorrowResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *MakeBorrowThriftServiceMakeBorrowResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("makeBorrow_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *MakeBorrowThriftServiceMakeBorrowResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *MakeBorrowThriftServiceMakeBorrowResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("MakeBorrowThriftServiceMakeBorrowResult(%+v)", *p)
}
