// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package customerlist

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - Customer
//  - StartTime
//  - EndTime
//  - Islock
//  - Username
//  - IsExport
//  - LimitOffset
//  - LimitNum
//  - ChengHuiTongTraceLog
type CustomerListRequestStruct struct {
	Customer             int32  `thrift:"customer,1" db:"customer" json:"customer"`
	StartTime            int32  `thrift:"start_time,2" db:"start_time" json:"start_time"`
	EndTime              int32  `thrift:"end_time,3" db:"end_time" json:"end_time"`
	Islock               int32  `thrift:"islock,4" db:"islock" json:"islock"`
	Username             string `thrift:"username,5" db:"username" json:"username"`
	IsExport             int32  `thrift:"is_export,6" db:"is_export" json:"is_export"`
	LimitOffset          int32  `thrift:"limitOffset,7" db:"limitOffset" json:"limitOffset"`
	LimitNum             int32  `thrift:"limitNum,8" db:"limitNum" json:"limitNum"`
	ChengHuiTongTraceLog string `thrift:"chengHuiTongTraceLog,9" db:"chengHuiTongTraceLog" json:"chengHuiTongTraceLog"`
}

// func NewCustomerListRequestStruct() *CustomerListRequestStruct {
//   return &CustomerListRequestStruct{}
// }

func (p *CustomerListRequestStruct) GetCustomer() int32 {
	return p.Customer
}

func (p *CustomerListRequestStruct) GetStartTime() int32 {
	return p.StartTime
}

func (p *CustomerListRequestStruct) GetEndTime() int32 {
	return p.EndTime
}

func (p *CustomerListRequestStruct) GetIslock() int32 {
	return p.Islock
}

func (p *CustomerListRequestStruct) GetUsername() string {
	return p.Username
}

func (p *CustomerListRequestStruct) GetIsExport() int32 {
	return p.IsExport
}

func (p *CustomerListRequestStruct) GetLimitOffset() int32 {
	return p.LimitOffset
}

func (p *CustomerListRequestStruct) GetLimitNum() int32 {
	return p.LimitNum
}

func (p *CustomerListRequestStruct) GetChengHuiTongTraceLog() string {
	return p.ChengHuiTongTraceLog
}
func (p *CustomerListRequestStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Customer = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.StartTime = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.EndTime = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Islock = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Username = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.IsExport = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.LimitOffset = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.LimitNum = v
	}
	return nil
}

func (p *CustomerListRequestStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.ChengHuiTongTraceLog = v
	}
	return nil
}

func (p *CustomerListRequestStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("CustomerListRequestStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *CustomerListRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("customer", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:customer: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Customer)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.customer (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:customer: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("start_time", thrift.I32, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:start_time: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.StartTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.start_time (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:start_time: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("end_time", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:end_time: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.EndTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.end_time (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:end_time: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("islock", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:islock: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Islock)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.islock (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:islock: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("username", thrift.STRING, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:username: ", p), err)
	}
	if err := oprot.WriteString(string(p.Username)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.username (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:username: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_export", thrift.I32, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:is_export: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsExport)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_export (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:is_export: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("limitOffset", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:limitOffset: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.LimitOffset)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.limitOffset (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:limitOffset: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("limitNum", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:limitNum: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.LimitNum)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.limitNum (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:limitNum: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("chengHuiTongTraceLog", thrift.STRING, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:chengHuiTongTraceLog: ", p), err)
	}
	if err := oprot.WriteString(string(p.ChengHuiTongTraceLog)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.chengHuiTongTraceLog (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:chengHuiTongTraceLog: ", p), err)
	}
	return err
}

func (p *CustomerListRequestStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CustomerListRequestStruct(%+v)", *p)
}

// Attributes:
//  - ID
//  - Username
//  - Password
//  - Paypassword
//  - Point
//  - Email
//  - Avatar
//  - Sex
//  - Realname
//  - Phone
//  - Tel
//  - Birthday
//  - Nation
//  - Province
//  - City
//  - Area
//  - Address
//  - Customer
//  - Logintime
//  - Loginip
//  - Addtime
//  - Addip
//  - Islock
//  - Isvest
//  - OsType
//  - DeviceToken
//  - WeinxinID
//  - BindTime
//  - InvitationCode
//  - Source
//  - Hsid
//  - GStatus
//  - GPassword
//  - AutoProtocolCode
//  - IsBorrower
//  - IsWorker
//  - Hswaitactivate
type CustomerListResultStruct struct {
	ID               int32  `thrift:"id,1" db:"id" json:"id"`
	Username         string `thrift:"username,2" db:"username" json:"username"`
	Password         string `thrift:"password,3" db:"password" json:"password"`
	Paypassword      string `thrift:"paypassword,4" db:"paypassword" json:"paypassword"`
	Point            int32  `thrift:"point,5" db:"point" json:"point"`
	Email            string `thrift:"email,6" db:"email" json:"email"`
	Avatar           string `thrift:"avatar,7" db:"avatar" json:"avatar"`
	Sex              int32  `thrift:"sex,8" db:"sex" json:"sex"`
	Realname         string `thrift:"realname,9" db:"realname" json:"realname"`
	Phone            string `thrift:"phone,10" db:"phone" json:"phone"`
	Tel              string `thrift:"tel,11" db:"tel" json:"tel"`
	Birthday         int32  `thrift:"birthday,12" db:"birthday" json:"birthday"`
	Nation           int32  `thrift:"nation,13" db:"nation" json:"nation"`
	Province         int32  `thrift:"province,14" db:"province" json:"province"`
	City             int32  `thrift:"city,15" db:"city" json:"city"`
	Area             int32  `thrift:"area,16" db:"area" json:"area"`
	Address          string `thrift:"address,17" db:"address" json:"address"`
	Customer         int32  `thrift:"customer,18" db:"customer" json:"customer"`
	Logintime        int32  `thrift:"logintime,19" db:"logintime" json:"logintime"`
	Loginip          string `thrift:"loginip,20" db:"loginip" json:"loginip"`
	Addtime          int32  `thrift:"addtime,21" db:"addtime" json:"addtime"`
	Addip            string `thrift:"addip,22" db:"addip" json:"addip"`
	Islock           int32  `thrift:"islock,23" db:"islock" json:"islock"`
	Isvest           int32  `thrift:"isvest,24" db:"isvest" json:"isvest"`
	OsType           int32  `thrift:"os_type,25" db:"os_type" json:"os_type"`
	DeviceToken      string `thrift:"device_token,26" db:"device_token" json:"device_token"`
	WeinxinID        string `thrift:"weinxin_id,27" db:"weinxin_id" json:"weinxin_id"`
	BindTime         int32  `thrift:"bind_time,28" db:"bind_time" json:"bind_time"`
	InvitationCode   string `thrift:"invitation_code,29" db:"invitation_code" json:"invitation_code"`
	Source           string `thrift:"source,30" db:"source" json:"source"`
	Hsid             string `thrift:"hsid,31" db:"hsid" json:"hsid"`
	GStatus          int32  `thrift:"g_status,32" db:"g_status" json:"g_status"`
	GPassword        string `thrift:"g_password,33" db:"g_password" json:"g_password"`
	AutoProtocolCode string `thrift:"auto_protocol_code,34" db:"auto_protocol_code" json:"auto_protocol_code"`
	IsBorrower       int32  `thrift:"is_borrower,35" db:"is_borrower" json:"is_borrower"`
	IsWorker         int32  `thrift:"is_worker,36" db:"is_worker" json:"is_worker"`
	Hswaitactivate   int32  `thrift:"hswaitactivate,37" db:"hswaitactivate" json:"hswaitactivate"`
}

func NewCustomerListResultStruct() *CustomerListResultStruct {
	return &CustomerListResultStruct{}
}

func (p *CustomerListResultStruct) GetID() int32 {
	return p.ID
}

func (p *CustomerListResultStruct) GetUsername() string {
	return p.Username
}

func (p *CustomerListResultStruct) GetPassword() string {
	return p.Password
}

func (p *CustomerListResultStruct) GetPaypassword() string {
	return p.Paypassword
}

func (p *CustomerListResultStruct) GetPoint() int32 {
	return p.Point
}

func (p *CustomerListResultStruct) GetEmail() string {
	return p.Email
}

func (p *CustomerListResultStruct) GetAvatar() string {
	return p.Avatar
}

func (p *CustomerListResultStruct) GetSex() int32 {
	return p.Sex
}

func (p *CustomerListResultStruct) GetRealname() string {
	return p.Realname
}

func (p *CustomerListResultStruct) GetPhone() string {
	return p.Phone
}

func (p *CustomerListResultStruct) GetTel() string {
	return p.Tel
}

func (p *CustomerListResultStruct) GetBirthday() int32 {
	return p.Birthday
}

func (p *CustomerListResultStruct) GetNation() int32 {
	return p.Nation
}

func (p *CustomerListResultStruct) GetProvince() int32 {
	return p.Province
}

func (p *CustomerListResultStruct) GetCity() int32 {
	return p.City
}

func (p *CustomerListResultStruct) GetArea() int32 {
	return p.Area
}

func (p *CustomerListResultStruct) GetAddress() string {
	return p.Address
}

func (p *CustomerListResultStruct) GetCustomer() int32 {
	return p.Customer
}

func (p *CustomerListResultStruct) GetLogintime() int32 {
	return p.Logintime
}

func (p *CustomerListResultStruct) GetLoginip() string {
	return p.Loginip
}

func (p *CustomerListResultStruct) GetAddtime() int32 {
	return p.Addtime
}

func (p *CustomerListResultStruct) GetAddip() string {
	return p.Addip
}

func (p *CustomerListResultStruct) GetIslock() int32 {
	return p.Islock
}

func (p *CustomerListResultStruct) GetIsvest() int32 {
	return p.Isvest
}

func (p *CustomerListResultStruct) GetOsType() int32 {
	return p.OsType
}

func (p *CustomerListResultStruct) GetDeviceToken() string {
	return p.DeviceToken
}

func (p *CustomerListResultStruct) GetWeinxinID() string {
	return p.WeinxinID
}

func (p *CustomerListResultStruct) GetBindTime() int32 {
	return p.BindTime
}

func (p *CustomerListResultStruct) GetInvitationCode() string {
	return p.InvitationCode
}

func (p *CustomerListResultStruct) GetSource() string {
	return p.Source
}

func (p *CustomerListResultStruct) GetHsid() string {
	return p.Hsid
}

func (p *CustomerListResultStruct) GetGStatus() int32 {
	return p.GStatus
}

func (p *CustomerListResultStruct) GetGPassword() string {
	return p.GPassword
}

func (p *CustomerListResultStruct) GetAutoProtocolCode() string {
	return p.AutoProtocolCode
}

func (p *CustomerListResultStruct) GetIsBorrower() int32 {
	return p.IsBorrower
}

func (p *CustomerListResultStruct) GetIsWorker() int32 {
	return p.IsWorker
}

func (p *CustomerListResultStruct) GetHswaitactivate() int32 {
	return p.Hswaitactivate
}
func (p *CustomerListResultStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.ReadField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.ReadField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.ReadField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.ReadField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.ReadField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.ReadField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.ReadField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.ReadField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.ReadField20(iprot); err != nil {
				return err
			}
		case 21:
			if err := p.ReadField21(iprot); err != nil {
				return err
			}
		case 22:
			if err := p.ReadField22(iprot); err != nil {
				return err
			}
		case 23:
			if err := p.ReadField23(iprot); err != nil {
				return err
			}
		case 24:
			if err := p.ReadField24(iprot); err != nil {
				return err
			}
		case 25:
			if err := p.ReadField25(iprot); err != nil {
				return err
			}
		case 26:
			if err := p.ReadField26(iprot); err != nil {
				return err
			}
		case 27:
			if err := p.ReadField27(iprot); err != nil {
				return err
			}
		case 28:
			if err := p.ReadField28(iprot); err != nil {
				return err
			}
		case 29:
			if err := p.ReadField29(iprot); err != nil {
				return err
			}
		case 30:
			if err := p.ReadField30(iprot); err != nil {
				return err
			}
		case 31:
			if err := p.ReadField31(iprot); err != nil {
				return err
			}
		case 32:
			if err := p.ReadField32(iprot); err != nil {
				return err
			}
		case 33:
			if err := p.ReadField33(iprot); err != nil {
				return err
			}
		case 34:
			if err := p.ReadField34(iprot); err != nil {
				return err
			}
		case 35:
			if err := p.ReadField35(iprot); err != nil {
				return err
			}
		case 36:
			if err := p.ReadField36(iprot); err != nil {
				return err
			}
		case 37:
			if err := p.ReadField37(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Username = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Password = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Paypassword = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.Point = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.Avatar = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.Sex = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.Realname = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.Phone = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.Tel = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.Birthday = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.Nation = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.Province = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.City = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.Area = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.Address = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.Customer = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.Logintime = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.Loginip = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField21(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 21: ", err)
	} else {
		p.Addtime = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField22(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 22: ", err)
	} else {
		p.Addip = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField23(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 23: ", err)
	} else {
		p.Islock = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField24(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 24: ", err)
	} else {
		p.Isvest = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField25(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 25: ", err)
	} else {
		p.OsType = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField26(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 26: ", err)
	} else {
		p.DeviceToken = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField27(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 27: ", err)
	} else {
		p.WeinxinID = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField28(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 28: ", err)
	} else {
		p.BindTime = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField29(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 29: ", err)
	} else {
		p.InvitationCode = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField30(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 30: ", err)
	} else {
		p.Source = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField31(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 31: ", err)
	} else {
		p.Hsid = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField32(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 32: ", err)
	} else {
		p.GStatus = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField33(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 33: ", err)
	} else {
		p.GPassword = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField34(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 34: ", err)
	} else {
		p.AutoProtocolCode = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField35(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 35: ", err)
	} else {
		p.IsBorrower = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField36(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 36: ", err)
	} else {
		p.IsWorker = v
	}
	return nil
}

func (p *CustomerListResultStruct) ReadField37(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 37: ", err)
	} else {
		p.Hswaitactivate = v
	}
	return nil
}

func (p *CustomerListResultStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("CustomerListResultStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
		if err := p.writeField10(oprot); err != nil {
			return err
		}
		if err := p.writeField11(oprot); err != nil {
			return err
		}
		if err := p.writeField12(oprot); err != nil {
			return err
		}
		if err := p.writeField13(oprot); err != nil {
			return err
		}
		if err := p.writeField14(oprot); err != nil {
			return err
		}
		if err := p.writeField15(oprot); err != nil {
			return err
		}
		if err := p.writeField16(oprot); err != nil {
			return err
		}
		if err := p.writeField17(oprot); err != nil {
			return err
		}
		if err := p.writeField18(oprot); err != nil {
			return err
		}
		if err := p.writeField19(oprot); err != nil {
			return err
		}
		if err := p.writeField20(oprot); err != nil {
			return err
		}
		if err := p.writeField21(oprot); err != nil {
			return err
		}
		if err := p.writeField22(oprot); err != nil {
			return err
		}
		if err := p.writeField23(oprot); err != nil {
			return err
		}
		if err := p.writeField24(oprot); err != nil {
			return err
		}
		if err := p.writeField25(oprot); err != nil {
			return err
		}
		if err := p.writeField26(oprot); err != nil {
			return err
		}
		if err := p.writeField27(oprot); err != nil {
			return err
		}
		if err := p.writeField28(oprot); err != nil {
			return err
		}
		if err := p.writeField29(oprot); err != nil {
			return err
		}
		if err := p.writeField30(oprot); err != nil {
			return err
		}
		if err := p.writeField31(oprot); err != nil {
			return err
		}
		if err := p.writeField32(oprot); err != nil {
			return err
		}
		if err := p.writeField33(oprot); err != nil {
			return err
		}
		if err := p.writeField34(oprot); err != nil {
			return err
		}
		if err := p.writeField35(oprot); err != nil {
			return err
		}
		if err := p.writeField36(oprot); err != nil {
			return err
		}
		if err := p.writeField37(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *CustomerListResultStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:id: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("username", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:username: ", p), err)
	}
	if err := oprot.WriteString(string(p.Username)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.username (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:username: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("password", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:password: ", p), err)
	}
	if err := oprot.WriteString(string(p.Password)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.password (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:password: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("paypassword", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:paypassword: ", p), err)
	}
	if err := oprot.WriteString(string(p.Paypassword)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.paypassword (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:paypassword: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("point", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:point: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Point)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.point (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:point: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email", thrift.STRING, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:email: ", p), err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.email (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:email: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("avatar", thrift.STRING, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:avatar: ", p), err)
	}
	if err := oprot.WriteString(string(p.Avatar)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.avatar (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:avatar: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sex", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:sex: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Sex)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.sex (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:sex: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("realname", thrift.STRING, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:realname: ", p), err)
	}
	if err := oprot.WriteString(string(p.Realname)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.realname (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:realname: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("phone", thrift.STRING, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:phone: ", p), err)
	}
	if err := oprot.WriteString(string(p.Phone)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.phone (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:phone: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("tel", thrift.STRING, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:tel: ", p), err)
	}
	if err := oprot.WriteString(string(p.Tel)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.tel (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:tel: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("birthday", thrift.I32, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:birthday: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Birthday)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.birthday (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:birthday: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("nation", thrift.I32, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:nation: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Nation)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.nation (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:nation: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("province", thrift.I32, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:province: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Province)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.province (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:province: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("city", thrift.I32, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:city: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.City)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.city (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:city: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("area", thrift.I32, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:area: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Area)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.area (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:area: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("address", thrift.STRING, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:address: ", p), err)
	}
	if err := oprot.WriteString(string(p.Address)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.address (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:address: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("customer", thrift.I32, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:customer: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Customer)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.customer (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:customer: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField19(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("logintime", thrift.I32, 19); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:logintime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Logintime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.logintime (19) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 19:logintime: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField20(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("loginip", thrift.STRING, 20); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:loginip: ", p), err)
	}
	if err := oprot.WriteString(string(p.Loginip)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.loginip (20) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 20:loginip: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField21(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("addtime", thrift.I32, 21); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:addtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Addtime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.addtime (21) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 21:addtime: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField22(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("addip", thrift.STRING, 22); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:addip: ", p), err)
	}
	if err := oprot.WriteString(string(p.Addip)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.addip (22) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 22:addip: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField23(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("islock", thrift.I32, 23); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 23:islock: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Islock)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.islock (23) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 23:islock: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField24(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("isvest", thrift.I32, 24); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 24:isvest: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Isvest)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.isvest (24) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 24:isvest: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField25(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("os_type", thrift.I32, 25); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 25:os_type: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.OsType)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.os_type (25) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 25:os_type: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField26(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("device_token", thrift.STRING, 26); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 26:device_token: ", p), err)
	}
	if err := oprot.WriteString(string(p.DeviceToken)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.device_token (26) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 26:device_token: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField27(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("weinxin_id", thrift.STRING, 27); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 27:weinxin_id: ", p), err)
	}
	if err := oprot.WriteString(string(p.WeinxinID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.weinxin_id (27) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 27:weinxin_id: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField28(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("bind_time", thrift.I32, 28); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 28:bind_time: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BindTime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.bind_time (28) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 28:bind_time: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField29(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("invitation_code", thrift.STRING, 29); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 29:invitation_code: ", p), err)
	}
	if err := oprot.WriteString(string(p.InvitationCode)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.invitation_code (29) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 29:invitation_code: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField30(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("source", thrift.STRING, 30); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 30:source: ", p), err)
	}
	if err := oprot.WriteString(string(p.Source)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.source (30) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 30:source: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField31(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("hsid", thrift.STRING, 31); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 31:hsid: ", p), err)
	}
	if err := oprot.WriteString(string(p.Hsid)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.hsid (31) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 31:hsid: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField32(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("g_status", thrift.I32, 32); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 32:g_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.GStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.g_status (32) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 32:g_status: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField33(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("g_password", thrift.STRING, 33); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 33:g_password: ", p), err)
	}
	if err := oprot.WriteString(string(p.GPassword)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.g_password (33) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 33:g_password: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField34(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("auto_protocol_code", thrift.STRING, 34); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 34:auto_protocol_code: ", p), err)
	}
	if err := oprot.WriteString(string(p.AutoProtocolCode)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.auto_protocol_code (34) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 34:auto_protocol_code: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField35(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_borrower", thrift.I32, 35); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 35:is_borrower: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsBorrower)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_borrower (35) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 35:is_borrower: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField36(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("is_worker", thrift.I32, 36); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 36:is_worker: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.IsWorker)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.is_worker (36) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 36:is_worker: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) writeField37(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("hswaitactivate", thrift.I32, 37); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 37:hswaitactivate: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Hswaitactivate)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.hswaitactivate (37) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 37:hswaitactivate: ", p), err)
	}
	return err
}

func (p *CustomerListResultStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CustomerListResultStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - Msg
//  - TotalNum
//  - CustomerList
type CustomerListResponseStruct struct {
	Status       int32                       `thrift:"status,1" db:"status" json:"status"`
	Msg          string                      `thrift:"msg,2" db:"msg" json:"msg"`
	TotalNum     int32                       `thrift:"total_num,3" db:"total_num" json:"total_num"`
	CustomerList []*CustomerListResultStruct `thrift:"CustomerList,4" db:"CustomerList" json:"CustomerList"`
}

func NewCustomerListResponseStruct() *CustomerListResponseStruct {
	return &CustomerListResponseStruct{}
}

func (p *CustomerListResponseStruct) GetStatus() int32 {
	return p.Status
}

func (p *CustomerListResponseStruct) GetMsg() string {
	return p.Msg
}

func (p *CustomerListResponseStruct) GetTotalNum() int32 {
	return p.TotalNum
}

func (p *CustomerListResponseStruct) GetCustomerList() []*CustomerListResultStruct {
	return p.CustomerList
}
func (p *CustomerListResponseStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *CustomerListResponseStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *CustomerListResponseStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *CustomerListResponseStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.TotalNum = v
	}
	return nil
}

func (p *CustomerListResponseStruct) ReadField4(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return thrift.PrependError("error reading list begin: ", err)
	}
	tSlice := make([]*CustomerListResultStruct, 0, size)
	p.CustomerList = tSlice
	for i := 0; i < size; i++ {
		_elem0 := &CustomerListResultStruct{}
		if err := _elem0.Read(iprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem0), err)
		}
		p.CustomerList = append(p.CustomerList, _elem0)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return thrift.PrependError("error reading list end: ", err)
	}
	return nil
}

func (p *CustomerListResponseStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("CustomerListResponseStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *CustomerListResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err)
	}
	return err
}

func (p *CustomerListResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("msg", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:msg: ", p), err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.msg (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:msg: ", p), err)
	}
	return err
}

func (p *CustomerListResponseStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("total_num", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:total_num: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.TotalNum)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.total_num (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:total_num: ", p), err)
	}
	return err
}

func (p *CustomerListResponseStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CustomerList", thrift.LIST, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:CustomerList: ", p), err)
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.CustomerList)); err != nil {
		return thrift.PrependError("error writing list begin: ", err)
	}
	for _, v := range p.CustomerList {
		if err := v.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return thrift.PrependError("error writing list end: ", err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:CustomerList: ", p), err)
	}
	return err
}

func (p *CustomerListResponseStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CustomerListResponseStruct(%+v)", *p)
}

type CustomerListThriftService interface {
	// Parameters:
	//  - RequestObj
	GetCustomerList(requestObj *CustomerListRequestStruct) (r *CustomerListResponseStruct, err error)
}

type CustomerListThriftServiceClient struct {
	Transport       thrift.TTransport
	ProtocolFactory thrift.TProtocolFactory
	InputProtocol   thrift.TProtocol
	OutputProtocol  thrift.TProtocol
	SeqId           int32
}

func NewCustomerListThriftServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *CustomerListThriftServiceClient {
	return &CustomerListThriftServiceClient{Transport: t,
		ProtocolFactory: f,
		InputProtocol:   f.GetProtocol(t),
		OutputProtocol:  f.GetProtocol(t),
		SeqId:           0,
	}
}

func NewCustomerListThriftServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *CustomerListThriftServiceClient {
	return &CustomerListThriftServiceClient{Transport: t,
		ProtocolFactory: nil,
		InputProtocol:   iprot,
		OutputProtocol:  oprot,
		SeqId:           0,
	}
}

// Parameters:
//  - RequestObj
func (p *CustomerListThriftServiceClient) GetCustomerList(requestObj *CustomerListRequestStruct) (r *CustomerListResponseStruct, err error) {
	if err = p.sendGetCustomerList(requestObj); err != nil {
		return
	}
	return p.recvGetCustomerList()
}

func (p *CustomerListThriftServiceClient) sendGetCustomerList(requestObj *CustomerListRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("getCustomerList", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := CustomerListThriftServiceGetCustomerListArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *CustomerListThriftServiceClient) recvGetCustomerList() (value *CustomerListResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "getCustomerList" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "getCustomerList failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "getCustomerList failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error1 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error2 error
		error2, err = error1.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error2
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "getCustomerList failed: invalid message type")
		return
	}
	result := CustomerListThriftServiceGetCustomerListResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

type CustomerListThriftServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      CustomerListThriftService
}

func (p *CustomerListThriftServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *CustomerListThriftServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *CustomerListThriftServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewCustomerListThriftServiceProcessor(handler CustomerListThriftService) *CustomerListThriftServiceProcessor {

	self3 := &CustomerListThriftServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self3.processorMap["getCustomerList"] = &customerListThriftServiceProcessorGetCustomerList{handler: handler}
	return self3
}

func (p *CustomerListThriftServiceProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x4 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x4.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush()
	return false, x4

}

type customerListThriftServiceProcessorGetCustomerList struct {
	handler CustomerListThriftService
}

func (p *customerListThriftServiceProcessorGetCustomerList) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := CustomerListThriftServiceGetCustomerListArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("getCustomerList", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := CustomerListThriftServiceGetCustomerListResult{}
	var retval *CustomerListResponseStruct
	var err2 error
	if retval, err2 = p.handler.GetCustomerList(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getCustomerList: "+err2.Error())
		oprot.WriteMessageBegin("getCustomerList", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("getCustomerList", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - RequestObj
type CustomerListThriftServiceGetCustomerListArgs struct {
	RequestObj *CustomerListRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewCustomerListThriftServiceGetCustomerListArgs() *CustomerListThriftServiceGetCustomerListArgs {
	return &CustomerListThriftServiceGetCustomerListArgs{}
}

var CustomerListThriftServiceGetCustomerListArgs_RequestObj_DEFAULT *CustomerListRequestStruct

func (p *CustomerListThriftServiceGetCustomerListArgs) GetRequestObj() *CustomerListRequestStruct {
	if !p.IsSetRequestObj() {
		return CustomerListThriftServiceGetCustomerListArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *CustomerListThriftServiceGetCustomerListArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *CustomerListThriftServiceGetCustomerListArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *CustomerListThriftServiceGetCustomerListArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &CustomerListRequestStruct{}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *CustomerListThriftServiceGetCustomerListArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("getCustomerList_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *CustomerListThriftServiceGetCustomerListArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *CustomerListThriftServiceGetCustomerListArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CustomerListThriftServiceGetCustomerListArgs(%+v)", *p)
}

// Attributes:
//  - Success
type CustomerListThriftServiceGetCustomerListResult struct {
	Success *CustomerListResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewCustomerListThriftServiceGetCustomerListResult() *CustomerListThriftServiceGetCustomerListResult {
	return &CustomerListThriftServiceGetCustomerListResult{}
}

var CustomerListThriftServiceGetCustomerListResult_Success_DEFAULT *CustomerListResponseStruct

func (p *CustomerListThriftServiceGetCustomerListResult) GetSuccess() *CustomerListResponseStruct {
	if !p.IsSetSuccess() {
		return CustomerListThriftServiceGetCustomerListResult_Success_DEFAULT
	}
	return p.Success
}
func (p *CustomerListThriftServiceGetCustomerListResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *CustomerListThriftServiceGetCustomerListResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *CustomerListThriftServiceGetCustomerListResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &CustomerListResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *CustomerListThriftServiceGetCustomerListResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("getCustomerList_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *CustomerListThriftServiceGetCustomerListResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *CustomerListThriftServiceGetCustomerListResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CustomerListThriftServiceGetCustomerListResult(%+v)", *p)
}
