// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package borrowrepaymentstatistics

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - UserID
//  - ChengHuiTongTraceLog
type RepaymentStatisticsRequestStruct struct {
	UserID               int32  `thrift:"user_id,1" db:"user_id" json:"user_id"`
	ChengHuiTongTraceLog string `thrift:"chengHuiTongTraceLog,2" db:"chengHuiTongTraceLog" json:"chengHuiTongTraceLog"`
}

// func NewRepaymentStatisticsRequestStruct() *RepaymentStatisticsRequestStruct {
//   return &RepaymentStatisticsRequestStruct{}
// }

func (p *RepaymentStatisticsRequestStruct) GetUserID() int32 {
	return p.UserID
}

func (p *RepaymentStatisticsRequestStruct) GetChengHuiTongTraceLog() string {
	return p.ChengHuiTongTraceLog
}
func (p *RepaymentStatisticsRequestStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *RepaymentStatisticsRequestStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.UserID = v
	}
	return nil
}

func (p *RepaymentStatisticsRequestStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.ChengHuiTongTraceLog = v
	}
	return nil
}

func (p *RepaymentStatisticsRequestStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("RepaymentStatisticsRequestStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *RepaymentStatisticsRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("user_id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:user_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.UserID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.user_id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:user_id: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsRequestStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("chengHuiTongTraceLog", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:chengHuiTongTraceLog: ", p), err)
	}
	if err := oprot.WriteString(string(p.ChengHuiTongTraceLog)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.chengHuiTongTraceLog (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:chengHuiTongTraceLog: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsRequestStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("RepaymentStatisticsRequestStruct(%+v)", *p)
}

// Attributes:
//  - BorrowID
//  - WillMoney
//  - ReplaymentMoney
//  - NoreplaymentMoney
type RepaymentStatisticsDetailsStruct struct {
	BorrowID          int32  `thrift:"borrow_id,1" db:"borrow_id" json:"borrow_id"`
	WillMoney         string `thrift:"will_money,2" db:"will_money" json:"will_money"`
	ReplaymentMoney   string `thrift:"replayment_money,3" db:"replayment_money" json:"replayment_money"`
	NoreplaymentMoney string `thrift:"noreplayment_money,4" db:"noreplayment_money" json:"noreplayment_money"`
}

func NewRepaymentStatisticsDetailsStruct() *RepaymentStatisticsDetailsStruct {
	return &RepaymentStatisticsDetailsStruct{}
}

func (p *RepaymentStatisticsDetailsStruct) GetBorrowID() int32 {
	return p.BorrowID
}

func (p *RepaymentStatisticsDetailsStruct) GetWillMoney() string {
	return p.WillMoney
}

func (p *RepaymentStatisticsDetailsStruct) GetReplaymentMoney() string {
	return p.ReplaymentMoney
}

func (p *RepaymentStatisticsDetailsStruct) GetNoreplaymentMoney() string {
	return p.NoreplaymentMoney
}
func (p *RepaymentStatisticsDetailsStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *RepaymentStatisticsDetailsStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.BorrowID = v
	}
	return nil
}

func (p *RepaymentStatisticsDetailsStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.WillMoney = v
	}
	return nil
}

func (p *RepaymentStatisticsDetailsStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.ReplaymentMoney = v
	}
	return nil
}

func (p *RepaymentStatisticsDetailsStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.NoreplaymentMoney = v
	}
	return nil
}

func (p *RepaymentStatisticsDetailsStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("RepaymentStatisticsDetailsStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *RepaymentStatisticsDetailsStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("borrow_id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:borrow_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BorrowID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.borrow_id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:borrow_id: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsDetailsStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("will_money", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:will_money: ", p), err)
	}
	if err := oprot.WriteString(string(p.WillMoney)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.will_money (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:will_money: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsDetailsStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("replayment_money", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:replayment_money: ", p), err)
	}
	if err := oprot.WriteString(string(p.ReplaymentMoney)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.replayment_money (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:replayment_money: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsDetailsStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("noreplayment_money", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:noreplayment_money: ", p), err)
	}
	if err := oprot.WriteString(string(p.NoreplaymentMoney)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.noreplayment_money (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:noreplayment_money: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsDetailsStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("RepaymentStatisticsDetailsStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - RepaymentStatisticsList
//  - Msg
type RepaymentStatisticsResponseStruct struct {
	Status                  int32                               `thrift:"status,1" db:"status" json:"status"`
	RepaymentStatisticsList []*RepaymentStatisticsDetailsStruct `thrift:"RepaymentStatisticsList,2" db:"RepaymentStatisticsList" json:"RepaymentStatisticsList"`
	Msg                     string                              `thrift:"msg,3" db:"msg" json:"msg"`
}

func NewRepaymentStatisticsResponseStruct() *RepaymentStatisticsResponseStruct {
	return &RepaymentStatisticsResponseStruct{}
}

func (p *RepaymentStatisticsResponseStruct) GetStatus() int32 {
	return p.Status
}

func (p *RepaymentStatisticsResponseStruct) GetRepaymentStatisticsList() []*RepaymentStatisticsDetailsStruct {
	return p.RepaymentStatisticsList
}

func (p *RepaymentStatisticsResponseStruct) GetMsg() string {
	return p.Msg
}
func (p *RepaymentStatisticsResponseStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *RepaymentStatisticsResponseStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *RepaymentStatisticsResponseStruct) ReadField2(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return thrift.PrependError("error reading list begin: ", err)
	}
	tSlice := make([]*RepaymentStatisticsDetailsStruct, 0, size)
	p.RepaymentStatisticsList = tSlice
	for i := 0; i < size; i++ {
		_elem0 := &RepaymentStatisticsDetailsStruct{}
		if err := _elem0.Read(iprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem0), err)
		}
		p.RepaymentStatisticsList = append(p.RepaymentStatisticsList, _elem0)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return thrift.PrependError("error reading list end: ", err)
	}
	return nil
}

func (p *RepaymentStatisticsResponseStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *RepaymentStatisticsResponseStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("RepaymentStatisticsResponseStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *RepaymentStatisticsResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("RepaymentStatisticsList", thrift.LIST, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:RepaymentStatisticsList: ", p), err)
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.RepaymentStatisticsList)); err != nil {
		return thrift.PrependError("error writing list begin: ", err)
	}
	for _, v := range p.RepaymentStatisticsList {
		if err := v.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return thrift.PrependError("error writing list end: ", err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:RepaymentStatisticsList: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsResponseStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("msg", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:msg: ", p), err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.msg (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:msg: ", p), err)
	}
	return err
}

func (p *RepaymentStatisticsResponseStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("RepaymentStatisticsResponseStruct(%+v)", *p)
}

type BorrowRepaymentStatisticsThriftService interface {
	// Parameters:
	//  - RequestObj
	GetRepaymentStatisticsDetails(requestObj *RepaymentStatisticsRequestStruct) (r *RepaymentStatisticsResponseStruct, err error)
}

type BorrowRepaymentStatisticsThriftServiceClient struct {
	Transport       thrift.TTransport
	ProtocolFactory thrift.TProtocolFactory
	InputProtocol   thrift.TProtocol
	OutputProtocol  thrift.TProtocol
	SeqId           int32
}

func NewBorrowRepaymentStatisticsThriftServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *BorrowRepaymentStatisticsThriftServiceClient {
	return &BorrowRepaymentStatisticsThriftServiceClient{Transport: t,
		ProtocolFactory: f,
		InputProtocol:   f.GetProtocol(t),
		OutputProtocol:  f.GetProtocol(t),
		SeqId:           0,
	}
}

func NewBorrowRepaymentStatisticsThriftServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *BorrowRepaymentStatisticsThriftServiceClient {
	return &BorrowRepaymentStatisticsThriftServiceClient{Transport: t,
		ProtocolFactory: nil,
		InputProtocol:   iprot,
		OutputProtocol:  oprot,
		SeqId:           0,
	}
}

// Parameters:
//  - RequestObj
func (p *BorrowRepaymentStatisticsThriftServiceClient) GetRepaymentStatisticsDetails(requestObj *RepaymentStatisticsRequestStruct) (r *RepaymentStatisticsResponseStruct, err error) {
	if err = p.sendGetRepaymentStatisticsDetails(requestObj); err != nil {
		return
	}
	return p.recvGetRepaymentStatisticsDetails()
}

func (p *BorrowRepaymentStatisticsThriftServiceClient) sendGetRepaymentStatisticsDetails(requestObj *RepaymentStatisticsRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("getRepaymentStatisticsDetails", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *BorrowRepaymentStatisticsThriftServiceClient) recvGetRepaymentStatisticsDetails() (value *RepaymentStatisticsResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "getRepaymentStatisticsDetails" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "getRepaymentStatisticsDetails failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "getRepaymentStatisticsDetails failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error1 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error2 error
		error2, err = error1.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error2
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "getRepaymentStatisticsDetails failed: invalid message type")
		return
	}
	result := BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

type BorrowRepaymentStatisticsThriftServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      BorrowRepaymentStatisticsThriftService
}

func (p *BorrowRepaymentStatisticsThriftServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *BorrowRepaymentStatisticsThriftServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *BorrowRepaymentStatisticsThriftServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewBorrowRepaymentStatisticsThriftServiceProcessor(handler BorrowRepaymentStatisticsThriftService) *BorrowRepaymentStatisticsThriftServiceProcessor {

	self3 := &BorrowRepaymentStatisticsThriftServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self3.processorMap["getRepaymentStatisticsDetails"] = &borrowRepaymentStatisticsThriftServiceProcessorGetRepaymentStatisticsDetails{handler: handler}
	return self3
}

func (p *BorrowRepaymentStatisticsThriftServiceProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x4 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x4.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush()
	return false, x4

}

type borrowRepaymentStatisticsThriftServiceProcessorGetRepaymentStatisticsDetails struct {
	handler BorrowRepaymentStatisticsThriftService
}

func (p *borrowRepaymentStatisticsThriftServiceProcessorGetRepaymentStatisticsDetails) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("getRepaymentStatisticsDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult{}
	var retval *RepaymentStatisticsResponseStruct
	var err2 error
	if retval, err2 = p.handler.GetRepaymentStatisticsDetails(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getRepaymentStatisticsDetails: "+err2.Error())
		oprot.WriteMessageBegin("getRepaymentStatisticsDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("getRepaymentStatisticsDetails", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - RequestObj
type BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs struct {
	RequestObj *RepaymentStatisticsRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewBorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs() *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs {
	return &BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs{}
}

var BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs_RequestObj_DEFAULT *RepaymentStatisticsRequestStruct

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) GetRequestObj() *RepaymentStatisticsRequestStruct {
	if !p.IsSetRequestObj() {
		return BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &RepaymentStatisticsRequestStruct{}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("getRepaymentStatisticsDetails_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsArgs(%+v)", *p)
}

// Attributes:
//  - Success
type BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult struct {
	Success *RepaymentStatisticsResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewBorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult() *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult {
	return &BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult{}
}

var BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult_Success_DEFAULT *RepaymentStatisticsResponseStruct

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) GetSuccess() *RepaymentStatisticsResponseStruct {
	if !p.IsSetSuccess() {
		return BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &RepaymentStatisticsResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("getRepaymentStatisticsDetails_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("BorrowRepaymentStatisticsThriftServiceGetRepaymentStatisticsDetailsResult(%+v)", *p)
}
