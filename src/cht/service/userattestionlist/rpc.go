// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package userattestionlist

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - Username
//  - Realname
//  - RealStatus
//  - EmailStatus
//  - PhoneStatus
//  - VideoStatus
//  - SceneStatus
//  - LimitOffset
//  - LimitNum
//  - ChengHuiTongTraceLog
type UserAttestionListRequestStruct struct {
	Username             string `thrift:"username,1" db:"username" json:"username"`
	Realname             string `thrift:"realname,2" db:"realname" json:"realname"`
	RealStatus           int32  `thrift:"real_status,3" db:"real_status" json:"real_status"`
	EmailStatus          int32  `thrift:"email_status,4" db:"email_status" json:"email_status"`
	PhoneStatus          int32  `thrift:"phone_status,5" db:"phone_status" json:"phone_status"`
	VideoStatus          int32  `thrift:"video_status,6" db:"video_status" json:"video_status"`
	SceneStatus          int32  `thrift:"scene_status,7" db:"scene_status" json:"scene_status"`
	LimitOffset          int32  `thrift:"limitOffset,8" db:"limitOffset" json:"limitOffset"`
	LimitNum             int32  `thrift:"limitNum,9" db:"limitNum" json:"limitNum"`
	ChengHuiTongTraceLog string `thrift:"chengHuiTongTraceLog,10" db:"chengHuiTongTraceLog" json:"chengHuiTongTraceLog"`
}

// func NewUserAttestionListRequestStruct() *UserAttestionListRequestStruct {
// 	return &UserAttestionListRequestStruct{}
// }

func (p *UserAttestionListRequestStruct) GetUsername() string {
	return p.Username
}

func (p *UserAttestionListRequestStruct) GetRealname() string {
	return p.Realname
}

func (p *UserAttestionListRequestStruct) GetRealStatus() int32 {
	return p.RealStatus
}

func (p *UserAttestionListRequestStruct) GetEmailStatus() int32 {
	return p.EmailStatus
}

func (p *UserAttestionListRequestStruct) GetPhoneStatus() int32 {
	return p.PhoneStatus
}

func (p *UserAttestionListRequestStruct) GetVideoStatus() int32 {
	return p.VideoStatus
}

func (p *UserAttestionListRequestStruct) GetSceneStatus() int32 {
	return p.SceneStatus
}

func (p *UserAttestionListRequestStruct) GetLimitOffset() int32 {
	return p.LimitOffset
}

func (p *UserAttestionListRequestStruct) GetLimitNum() int32 {
	return p.LimitNum
}

func (p *UserAttestionListRequestStruct) GetChengHuiTongTraceLog() string {
	return p.ChengHuiTongTraceLog
}
func (p *UserAttestionListRequestStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Username = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Realname = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.RealStatus = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.EmailStatus = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.PhoneStatus = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.VideoStatus = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.SceneStatus = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.LimitOffset = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.LimitNum = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.ChengHuiTongTraceLog = v
	}
	return nil
}

func (p *UserAttestionListRequestStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("UserAttestionListRequestStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
		if err := p.writeField10(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *UserAttestionListRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("username", thrift.STRING, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:username: ", p), err)
	}
	if err := oprot.WriteString(string(p.Username)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.username (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:username: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("realname", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:realname: ", p), err)
	}
	if err := oprot.WriteString(string(p.Realname)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.realname (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:realname: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("real_status", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:real_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RealStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.real_status (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:real_status: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email_status", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:email_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.EmailStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.email_status (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:email_status: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("phone_status", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:phone_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.PhoneStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.phone_status (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:phone_status: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("video_status", thrift.I32, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:video_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VideoStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.video_status (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:video_status: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("scene_status", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:scene_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.SceneStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.scene_status (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:scene_status: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("limitOffset", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:limitOffset: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.LimitOffset)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.limitOffset (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:limitOffset: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("limitNum", thrift.I32, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:limitNum: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.LimitNum)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.limitNum (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:limitNum: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("chengHuiTongTraceLog", thrift.STRING, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:chengHuiTongTraceLog: ", p), err)
	}
	if err := oprot.WriteString(string(p.ChengHuiTongTraceLog)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.chengHuiTongTraceLog (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:chengHuiTongTraceLog: ", p), err)
	}
	return err
}

func (p *UserAttestionListRequestStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserAttestionListRequestStruct(%+v)", *p)
}

// Attributes:
//  - UserID
//  - CardType
//  - HsCardType
//  - CardID
//  - CardPic1
//  - CardPic2
//  - VideoPic
//  - RealStatus
//  - RealPasstime
//  - EmailStatus
//  - EmailPasstime
//  - PhoneStatus
//  - PhonePasstime
//  - VideoStatus
//  - VideoPasstime
//  - SceneStatus
//  - ScenePasstime
//  - VipStatus
//  - VipPasstime
//  - VipVerifytime
//  - Username
//  - Realname
//  - Phone
//  - Email
//  - Name
type UserAttestationDetailsStruct struct {
	UserID        int32  `thrift:"user_id,1" db:"user_id" json:"user_id"`
	CardType      int32  `thrift:"card_type,2" db:"card_type" json:"card_type"`
	HsCardType    string `thrift:"hs_card_type,3" db:"hs_card_type" json:"hs_card_type"`
	CardID        string `thrift:"card_id,4" db:"card_id" json:"card_id"`
	CardPic1      string `thrift:"card_pic1,5" db:"card_pic1" json:"card_pic1"`
	CardPic2      string `thrift:"card_pic2,6" db:"card_pic2" json:"card_pic2"`
	VideoPic      string `thrift:"video_pic,7" db:"video_pic" json:"video_pic"`
	RealStatus    int32  `thrift:"real_status,8" db:"real_status" json:"real_status"`
	RealPasstime  int32  `thrift:"real_passtime,9" db:"real_passtime" json:"real_passtime"`
	EmailStatus   int32  `thrift:"email_status,10" db:"email_status" json:"email_status"`
	EmailPasstime int32  `thrift:"email_passtime,11" db:"email_passtime" json:"email_passtime"`
	PhoneStatus   int32  `thrift:"phone_status,12" db:"phone_status" json:"phone_status"`
	PhonePasstime int32  `thrift:"phone_passtime,13" db:"phone_passtime" json:"phone_passtime"`
	VideoStatus   int32  `thrift:"video_status,14" db:"video_status" json:"video_status"`
	VideoPasstime int32  `thrift:"video_passtime,15" db:"video_passtime" json:"video_passtime"`
	SceneStatus   int32  `thrift:"scene_status,16" db:"scene_status" json:"scene_status"`
	ScenePasstime int32  `thrift:"scene_passtime,17" db:"scene_passtime" json:"scene_passtime"`
	VipStatus     int32  `thrift:"vip_status,18" db:"vip_status" json:"vip_status"`
	VipPasstime   int32  `thrift:"vip_passtime,19" db:"vip_passtime" json:"vip_passtime"`
	VipVerifytime int32  `thrift:"vip_verifytime,20" db:"vip_verifytime" json:"vip_verifytime"`
	Username      string `thrift:"username,21" db:"username" json:"username"`
	Realname      string `thrift:"realname,22" db:"realname" json:"realname"`
	Phone         string `thrift:"phone,23" db:"phone" json:"phone"`
	Email         string `thrift:"email,24" db:"email" json:"email"`
	Name          string `thrift:"name,25" db:"name" json:"name"`
}

func NewUserAttestationDetailsStruct() *UserAttestationDetailsStruct {
	return &UserAttestationDetailsStruct{}
}

func (p *UserAttestationDetailsStruct) GetUserID() int32 {
	return p.UserID
}

func (p *UserAttestationDetailsStruct) GetCardType() int32 {
	return p.CardType
}

func (p *UserAttestationDetailsStruct) GetHsCardType() string {
	return p.HsCardType
}

func (p *UserAttestationDetailsStruct) GetCardID() string {
	return p.CardID
}

func (p *UserAttestationDetailsStruct) GetCardPic1() string {
	return p.CardPic1
}

func (p *UserAttestationDetailsStruct) GetCardPic2() string {
	return p.CardPic2
}

func (p *UserAttestationDetailsStruct) GetVideoPic() string {
	return p.VideoPic
}

func (p *UserAttestationDetailsStruct) GetRealStatus() int32 {
	return p.RealStatus
}

func (p *UserAttestationDetailsStruct) GetRealPasstime() int32 {
	return p.RealPasstime
}

func (p *UserAttestationDetailsStruct) GetEmailStatus() int32 {
	return p.EmailStatus
}

func (p *UserAttestationDetailsStruct) GetEmailPasstime() int32 {
	return p.EmailPasstime
}

func (p *UserAttestationDetailsStruct) GetPhoneStatus() int32 {
	return p.PhoneStatus
}

func (p *UserAttestationDetailsStruct) GetPhonePasstime() int32 {
	return p.PhonePasstime
}

func (p *UserAttestationDetailsStruct) GetVideoStatus() int32 {
	return p.VideoStatus
}

func (p *UserAttestationDetailsStruct) GetVideoPasstime() int32 {
	return p.VideoPasstime
}

func (p *UserAttestationDetailsStruct) GetSceneStatus() int32 {
	return p.SceneStatus
}

func (p *UserAttestationDetailsStruct) GetScenePasstime() int32 {
	return p.ScenePasstime
}

func (p *UserAttestationDetailsStruct) GetVipStatus() int32 {
	return p.VipStatus
}

func (p *UserAttestationDetailsStruct) GetVipPasstime() int32 {
	return p.VipPasstime
}

func (p *UserAttestationDetailsStruct) GetVipVerifytime() int32 {
	return p.VipVerifytime
}

func (p *UserAttestationDetailsStruct) GetUsername() string {
	return p.Username
}

func (p *UserAttestationDetailsStruct) GetRealname() string {
	return p.Realname
}

func (p *UserAttestationDetailsStruct) GetPhone() string {
	return p.Phone
}

func (p *UserAttestationDetailsStruct) GetEmail() string {
	return p.Email
}

func (p *UserAttestationDetailsStruct) GetName() string {
	return p.Name
}
func (p *UserAttestationDetailsStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.ReadField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.ReadField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.ReadField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.ReadField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.ReadField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.ReadField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.ReadField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.ReadField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.ReadField20(iprot); err != nil {
				return err
			}
		case 21:
			if err := p.ReadField21(iprot); err != nil {
				return err
			}
		case 22:
			if err := p.ReadField22(iprot); err != nil {
				return err
			}
		case 23:
			if err := p.ReadField23(iprot); err != nil {
				return err
			}
		case 24:
			if err := p.ReadField24(iprot); err != nil {
				return err
			}
		case 25:
			if err := p.ReadField25(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.UserID = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.CardType = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.HsCardType = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.CardID = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.CardPic1 = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.CardPic2 = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.VideoPic = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.RealStatus = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.RealPasstime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.EmailStatus = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.EmailPasstime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.PhoneStatus = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.PhonePasstime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.VideoStatus = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.VideoPasstime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.SceneStatus = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.ScenePasstime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.VipStatus = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.VipPasstime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.VipVerifytime = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField21(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 21: ", err)
	} else {
		p.Username = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField22(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 22: ", err)
	} else {
		p.Realname = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField23(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 23: ", err)
	} else {
		p.Phone = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField24(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 24: ", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) ReadField25(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 25: ", err)
	} else {
		p.Name = v
	}
	return nil
}

func (p *UserAttestationDetailsStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("UserAttestationDetailsStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
		if err := p.writeField10(oprot); err != nil {
			return err
		}
		if err := p.writeField11(oprot); err != nil {
			return err
		}
		if err := p.writeField12(oprot); err != nil {
			return err
		}
		if err := p.writeField13(oprot); err != nil {
			return err
		}
		if err := p.writeField14(oprot); err != nil {
			return err
		}
		if err := p.writeField15(oprot); err != nil {
			return err
		}
		if err := p.writeField16(oprot); err != nil {
			return err
		}
		if err := p.writeField17(oprot); err != nil {
			return err
		}
		if err := p.writeField18(oprot); err != nil {
			return err
		}
		if err := p.writeField19(oprot); err != nil {
			return err
		}
		if err := p.writeField20(oprot); err != nil {
			return err
		}
		if err := p.writeField21(oprot); err != nil {
			return err
		}
		if err := p.writeField22(oprot); err != nil {
			return err
		}
		if err := p.writeField23(oprot); err != nil {
			return err
		}
		if err := p.writeField24(oprot); err != nil {
			return err
		}
		if err := p.writeField25(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *UserAttestationDetailsStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("user_id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:user_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.UserID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.user_id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:user_id: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("card_type", thrift.I32, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:card_type: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.CardType)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.card_type (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:card_type: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("hs_card_type", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:hs_card_type: ", p), err)
	}
	if err := oprot.WriteString(string(p.HsCardType)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.hs_card_type (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:hs_card_type: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("card_id", thrift.STRING, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:card_id: ", p), err)
	}
	if err := oprot.WriteString(string(p.CardID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.card_id (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:card_id: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("card_pic1", thrift.STRING, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:card_pic1: ", p), err)
	}
	if err := oprot.WriteString(string(p.CardPic1)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.card_pic1 (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:card_pic1: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("card_pic2", thrift.STRING, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:card_pic2: ", p), err)
	}
	if err := oprot.WriteString(string(p.CardPic2)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.card_pic2 (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:card_pic2: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("video_pic", thrift.STRING, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:video_pic: ", p), err)
	}
	if err := oprot.WriteString(string(p.VideoPic)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.video_pic (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:video_pic: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("real_status", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:real_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RealStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.real_status (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:real_status: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("real_passtime", thrift.I32, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:real_passtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.RealPasstime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.real_passtime (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:real_passtime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email_status", thrift.I32, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:email_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.EmailStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.email_status (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:email_status: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email_passtime", thrift.I32, 11); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:email_passtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.EmailPasstime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.email_passtime (11) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 11:email_passtime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField12(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("phone_status", thrift.I32, 12); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:phone_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.PhoneStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.phone_status (12) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 12:phone_status: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField13(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("phone_passtime", thrift.I32, 13); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:phone_passtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.PhonePasstime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.phone_passtime (13) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 13:phone_passtime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField14(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("video_status", thrift.I32, 14); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:video_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VideoStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.video_status (14) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 14:video_status: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField15(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("video_passtime", thrift.I32, 15); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:video_passtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VideoPasstime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.video_passtime (15) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 15:video_passtime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField16(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("scene_status", thrift.I32, 16); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:scene_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.SceneStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.scene_status (16) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 16:scene_status: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField17(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("scene_passtime", thrift.I32, 17); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:scene_passtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ScenePasstime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.scene_passtime (17) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 17:scene_passtime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField18(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("vip_status", thrift.I32, 18); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:vip_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VipStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.vip_status (18) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 18:vip_status: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField19(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("vip_passtime", thrift.I32, 19); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:vip_passtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VipPasstime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.vip_passtime (19) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 19:vip_passtime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField20(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("vip_verifytime", thrift.I32, 20); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:vip_verifytime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.VipVerifytime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.vip_verifytime (20) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 20:vip_verifytime: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField21(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("username", thrift.STRING, 21); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:username: ", p), err)
	}
	if err := oprot.WriteString(string(p.Username)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.username (21) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 21:username: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField22(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("realname", thrift.STRING, 22); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:realname: ", p), err)
	}
	if err := oprot.WriteString(string(p.Realname)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.realname (22) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 22:realname: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField23(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("phone", thrift.STRING, 23); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 23:phone: ", p), err)
	}
	if err := oprot.WriteString(string(p.Phone)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.phone (23) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 23:phone: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField24(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("email", thrift.STRING, 24); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 24:email: ", p), err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.email (24) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 24:email: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) writeField25(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("name", thrift.STRING, 25); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 25:name: ", p), err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.name (25) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 25:name: ", p), err)
	}
	return err
}

func (p *UserAttestationDetailsStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserAttestationDetailsStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - Msg
//  - Total
//  - UserAttestionList
type UserAttestionListResponseStruct struct {
	Status            int32                           `thrift:"status,1" db:"status" json:"status"`
	Msg               string                          `thrift:"msg,2" db:"msg" json:"msg"`
	Total             int32                           `thrift:"total,3" db:"total" json:"total"`
	UserAttestionList []*UserAttestationDetailsStruct `thrift:"UserAttestionList,4" db:"UserAttestionList" json:"UserAttestionList"`
}

func NewUserAttestionListResponseStruct() *UserAttestionListResponseStruct {
	return &UserAttestionListResponseStruct{}
}

func (p *UserAttestionListResponseStruct) GetStatus() int32 {
	return p.Status
}

func (p *UserAttestionListResponseStruct) GetMsg() string {
	return p.Msg
}

func (p *UserAttestionListResponseStruct) GetTotal() int32 {
	return p.Total
}

func (p *UserAttestionListResponseStruct) GetUserAttestionList() []*UserAttestationDetailsStruct {
	return p.UserAttestionList
}
func (p *UserAttestionListResponseStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *UserAttestionListResponseStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *UserAttestionListResponseStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *UserAttestionListResponseStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Total = v
	}
	return nil
}

func (p *UserAttestionListResponseStruct) ReadField4(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return thrift.PrependError("error reading list begin: ", err)
	}
	tSlice := make([]*UserAttestationDetailsStruct, 0, size)
	p.UserAttestionList = tSlice
	for i := 0; i < size; i++ {
		_elem0 := &UserAttestationDetailsStruct{}
		if err := _elem0.Read(iprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _elem0), err)
		}
		p.UserAttestionList = append(p.UserAttestionList, _elem0)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return thrift.PrependError("error reading list end: ", err)
	}
	return nil
}

func (p *UserAttestionListResponseStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("UserAttestionListResponseStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *UserAttestionListResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err)
	}
	return err
}

func (p *UserAttestionListResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("msg", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:msg: ", p), err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.msg (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:msg: ", p), err)
	}
	return err
}

func (p *UserAttestionListResponseStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("total", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:total: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Total)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.total (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:total: ", p), err)
	}
	return err
}

func (p *UserAttestionListResponseStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("UserAttestionList", thrift.LIST, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:UserAttestionList: ", p), err)
	}
	if err := oprot.WriteListBegin(thrift.STRUCT, len(p.UserAttestionList)); err != nil {
		return thrift.PrependError("error writing list begin: ", err)
	}
	for _, v := range p.UserAttestionList {
		if err := v.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
		}
	}
	if err := oprot.WriteListEnd(); err != nil {
		return thrift.PrependError("error writing list end: ", err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:UserAttestionList: ", p), err)
	}
	return err
}

func (p *UserAttestionListResponseStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserAttestionListResponseStruct(%+v)", *p)
}

type UserAttestionListThriftService interface {
	// Parameters:
	//  - RequestObj
	UserAttestionList(requestObj *UserAttestionListRequestStruct) (r *UserAttestionListResponseStruct, err error)
}

type UserAttestionListThriftServiceClient struct {
	Transport       thrift.TTransport
	ProtocolFactory thrift.TProtocolFactory
	InputProtocol   thrift.TProtocol
	OutputProtocol  thrift.TProtocol
	SeqId           int32
}

func NewUserAttestionListThriftServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *UserAttestionListThriftServiceClient {
	return &UserAttestionListThriftServiceClient{Transport: t,
		ProtocolFactory: f,
		InputProtocol:   f.GetProtocol(t),
		OutputProtocol:  f.GetProtocol(t),
		SeqId:           0,
	}
}

func NewUserAttestionListThriftServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *UserAttestionListThriftServiceClient {
	return &UserAttestionListThriftServiceClient{Transport: t,
		ProtocolFactory: nil,
		InputProtocol:   iprot,
		OutputProtocol:  oprot,
		SeqId:           0,
	}
}

// Parameters:
//  - RequestObj
func (p *UserAttestionListThriftServiceClient) UserAttestionList(requestObj *UserAttestionListRequestStruct) (r *UserAttestionListResponseStruct, err error) {
	if err = p.sendUserAttestionList(requestObj); err != nil {
		return
	}
	return p.recvUserAttestionList()
}

func (p *UserAttestionListThriftServiceClient) sendUserAttestionList(requestObj *UserAttestionListRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("userAttestionList", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := UserAttestionListThriftServiceUserAttestionListArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *UserAttestionListThriftServiceClient) recvUserAttestionList() (value *UserAttestionListResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "userAttestionList" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "userAttestionList failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "userAttestionList failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error1 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error2 error
		error2, err = error1.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error2
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "userAttestionList failed: invalid message type")
		return
	}
	result := UserAttestionListThriftServiceUserAttestionListResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

type UserAttestionListThriftServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      UserAttestionListThriftService
}

func (p *UserAttestionListThriftServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *UserAttestionListThriftServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *UserAttestionListThriftServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewUserAttestionListThriftServiceProcessor(handler UserAttestionListThriftService) *UserAttestionListThriftServiceProcessor {

	self3 := &UserAttestionListThriftServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self3.processorMap["userAttestionList"] = &userAttestionListThriftServiceProcessorUserAttestionList{handler: handler}
	return self3
}

func (p *UserAttestionListThriftServiceProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x4 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x4.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush()
	return false, x4

}

type userAttestionListThriftServiceProcessorUserAttestionList struct {
	handler UserAttestionListThriftService
}

func (p *userAttestionListThriftServiceProcessorUserAttestionList) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := UserAttestionListThriftServiceUserAttestionListArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("userAttestionList", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := UserAttestionListThriftServiceUserAttestionListResult{}
	var retval *UserAttestionListResponseStruct
	var err2 error
	if retval, err2 = p.handler.UserAttestionList(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing userAttestionList: "+err2.Error())
		oprot.WriteMessageBegin("userAttestionList", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("userAttestionList", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - RequestObj
type UserAttestionListThriftServiceUserAttestionListArgs struct {
	RequestObj *UserAttestionListRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewUserAttestionListThriftServiceUserAttestionListArgs() *UserAttestionListThriftServiceUserAttestionListArgs {
	return &UserAttestionListThriftServiceUserAttestionListArgs{}
}

var UserAttestionListThriftServiceUserAttestionListArgs_RequestObj_DEFAULT *UserAttestionListRequestStruct

func (p *UserAttestionListThriftServiceUserAttestionListArgs) GetRequestObj() *UserAttestionListRequestStruct {
	if !p.IsSetRequestObj() {
		return UserAttestionListThriftServiceUserAttestionListArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *UserAttestionListThriftServiceUserAttestionListArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *UserAttestionListThriftServiceUserAttestionListArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *UserAttestionListThriftServiceUserAttestionListArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &UserAttestionListRequestStruct{}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *UserAttestionListThriftServiceUserAttestionListArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("userAttestionList_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *UserAttestionListThriftServiceUserAttestionListArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *UserAttestionListThriftServiceUserAttestionListArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserAttestionListThriftServiceUserAttestionListArgs(%+v)", *p)
}

// Attributes:
//  - Success
type UserAttestionListThriftServiceUserAttestionListResult struct {
	Success *UserAttestionListResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewUserAttestionListThriftServiceUserAttestionListResult() *UserAttestionListThriftServiceUserAttestionListResult {
	return &UserAttestionListThriftServiceUserAttestionListResult{}
}

var UserAttestionListThriftServiceUserAttestionListResult_Success_DEFAULT *UserAttestionListResponseStruct

func (p *UserAttestionListThriftServiceUserAttestionListResult) GetSuccess() *UserAttestionListResponseStruct {
	if !p.IsSetSuccess() {
		return UserAttestionListThriftServiceUserAttestionListResult_Success_DEFAULT
	}
	return p.Success
}
func (p *UserAttestionListThriftServiceUserAttestionListResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *UserAttestionListThriftServiceUserAttestionListResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *UserAttestionListThriftServiceUserAttestionListResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &UserAttestionListResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *UserAttestionListThriftServiceUserAttestionListResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("userAttestionList_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *UserAttestionListThriftServiceUserAttestionListResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *UserAttestionListThriftServiceUserAttestionListResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UserAttestionListThriftServiceUserAttestionListResult(%+v)", *p)
}
