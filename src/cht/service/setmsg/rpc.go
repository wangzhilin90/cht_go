// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package setmsg

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - UserID
//  - ChengHuiTongTraceLog
type SetMsgDetailsRequestStruct struct {
	UserID int32 `thrift:"user_id,1" db:"user_id" json:"user_id"`
	// unused field # 2
	ChengHuiTongTraceLog string `thrift:"chengHuiTongTraceLog,3" db:"chengHuiTongTraceLog" json:"chengHuiTongTraceLog"`
}

// func NewSetMsgDetailsRequestStruct() *SetMsgDetailsRequestStruct {
//   return &SetMsgDetailsRequestStruct{}
// }

func (p *SetMsgDetailsRequestStruct) GetUserID() int32 {
	return p.UserID
}

func (p *SetMsgDetailsRequestStruct) GetChengHuiTongTraceLog() string {
	return p.ChengHuiTongTraceLog
}
func (p *SetMsgDetailsRequestStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgDetailsRequestStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.UserID = v
	}
	return nil
}

func (p *SetMsgDetailsRequestStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.ChengHuiTongTraceLog = v
	}
	return nil
}

func (p *SetMsgDetailsRequestStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SetMsgDetailsRequestStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgDetailsRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("user_id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:user_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.UserID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.user_id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:user_id: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsRequestStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("chengHuiTongTraceLog", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:chengHuiTongTraceLog: ", p), err)
	}
	if err := oprot.WriteString(string(p.ChengHuiTongTraceLog)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.chengHuiTongTraceLog (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:chengHuiTongTraceLog: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsRequestStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgDetailsRequestStruct(%+v)", *p)
}

// Attributes:
//  - ID
//  - UserID
//  - Addtime
//  - Status
//  - TenderStatus
//  - BorrowStatus
//  - ProtoStatus
//  - StationStatus
//  - GuideStatus
//  - SoundStatus
type SetMsgDetailsStruct struct {
	ID            int32 `thrift:"id,1" db:"id" json:"id"`
	UserID        int32 `thrift:"user_id,2" db:"user_id" json:"user_id"`
	Addtime       int32 `thrift:"addtime,3" db:"addtime" json:"addtime"`
	Status        int32 `thrift:"status,4" db:"status" json:"status"`
	TenderStatus  int32 `thrift:"tender_status,5" db:"tender_status" json:"tender_status"`
	BorrowStatus  int32 `thrift:"borrow_status,6" db:"borrow_status" json:"borrow_status"`
	ProtoStatus   int32 `thrift:"proto_status,7" db:"proto_status" json:"proto_status"`
	StationStatus int32 `thrift:"station_status,8" db:"station_status" json:"station_status"`
	GuideStatus   int32 `thrift:"guide_status,9" db:"guide_status" json:"guide_status"`
	SoundStatus   int32 `thrift:"sound_status,10" db:"sound_status" json:"sound_status"`
}

func NewSetMsgDetailsStruct() *SetMsgDetailsStruct {
	return &SetMsgDetailsStruct{}
}

func (p *SetMsgDetailsStruct) GetID() int32 {
	return p.ID
}

func (p *SetMsgDetailsStruct) GetUserID() int32 {
	return p.UserID
}

func (p *SetMsgDetailsStruct) GetAddtime() int32 {
	return p.Addtime
}

func (p *SetMsgDetailsStruct) GetStatus() int32 {
	return p.Status
}

func (p *SetMsgDetailsStruct) GetTenderStatus() int32 {
	return p.TenderStatus
}

func (p *SetMsgDetailsStruct) GetBorrowStatus() int32 {
	return p.BorrowStatus
}

func (p *SetMsgDetailsStruct) GetProtoStatus() int32 {
	return p.ProtoStatus
}

func (p *SetMsgDetailsStruct) GetStationStatus() int32 {
	return p.StationStatus
}

func (p *SetMsgDetailsStruct) GetGuideStatus() int32 {
	return p.GuideStatus
}

func (p *SetMsgDetailsStruct) GetSoundStatus() int32 {
	return p.SoundStatus
}
func (p *SetMsgDetailsStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.ID = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.UserID = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Addtime = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.TenderStatus = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.BorrowStatus = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.ProtoStatus = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.StationStatus = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.GuideStatus = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.SoundStatus = v
	}
	return nil
}

func (p *SetMsgDetailsStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SetMsgDetailsStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
		if err := p.writeField10(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgDetailsStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:id: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("user_id", thrift.I32, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:user_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.UserID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.user_id (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:user_id: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("addtime", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:addtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Addtime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.addtime (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:addtime: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("tender_status", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:tender_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.TenderStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.tender_status (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:tender_status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("borrow_status", thrift.I32, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:borrow_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BorrowStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.borrow_status (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:borrow_status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("proto_status", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:proto_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ProtoStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.proto_status (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:proto_status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("station_status", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:station_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.StationStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.station_status (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:station_status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("guide_status", thrift.I32, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:guide_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.GuideStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.guide_status (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:guide_status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sound_status", thrift.I32, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:sound_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.SoundStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.sound_status (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:sound_status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgDetailsStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - SetMsgDetails
//  - Msg
type SetMsgDetailsResponseStruct struct {
	Status        int32                `thrift:"status,1" db:"status" json:"status"`
	SetMsgDetails *SetMsgDetailsStruct `thrift:"SetMsgDetails,2" db:"SetMsgDetails" json:"SetMsgDetails"`
	Msg           string               `thrift:"msg,3" db:"msg" json:"msg"`
}

func NewSetMsgDetailsResponseStruct() *SetMsgDetailsResponseStruct {
	return &SetMsgDetailsResponseStruct{}
}

func (p *SetMsgDetailsResponseStruct) GetStatus() int32 {
	return p.Status
}

var SetMsgDetailsResponseStruct_SetMsgDetails_DEFAULT *SetMsgDetailsStruct

func (p *SetMsgDetailsResponseStruct) GetSetMsgDetails() *SetMsgDetailsStruct {
	if !p.IsSetSetMsgDetails() {
		return SetMsgDetailsResponseStruct_SetMsgDetails_DEFAULT
	}
	return p.SetMsgDetails
}

func (p *SetMsgDetailsResponseStruct) GetMsg() string {
	return p.Msg
}
func (p *SetMsgDetailsResponseStruct) IsSetSetMsgDetails() bool {
	return p.SetMsgDetails != nil
}

func (p *SetMsgDetailsResponseStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgDetailsResponseStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *SetMsgDetailsResponseStruct) ReadField2(iprot thrift.TProtocol) error {
	p.SetMsgDetails = &SetMsgDetailsStruct{}
	if err := p.SetMsgDetails.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.SetMsgDetails), err)
	}
	return nil
}

func (p *SetMsgDetailsResponseStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *SetMsgDetailsResponseStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SetMsgDetailsResponseStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgDetailsResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("SetMsgDetails", thrift.STRUCT, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:SetMsgDetails: ", p), err)
	}
	if err := p.SetMsgDetails.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.SetMsgDetails), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:SetMsgDetails: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsResponseStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("msg", thrift.STRING, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:msg: ", p), err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.msg (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:msg: ", p), err)
	}
	return err
}

func (p *SetMsgDetailsResponseStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgDetailsResponseStruct(%+v)", *p)
}

// Attributes:
//  - UserID
//  - Addtime
//  - Status
//  - TenderStatus
//  - BorrowStatus
//  - ProtoStatus
//  - StationStatus
//  - GuideStatus
//  - SoundStatus
//  - ChengHuiTongTraceLog
type SetMsgDealRequestStruct struct {
	UserID               int32  `thrift:"user_id,1" db:"user_id" json:"user_id"`
	Addtime              int32  `thrift:"addtime,2" db:"addtime" json:"addtime"`
	Status               int32  `thrift:"status,3" db:"status" json:"status"`
	TenderStatus         int32  `thrift:"tender_status,4" db:"tender_status" json:"tender_status"`
	BorrowStatus         int32  `thrift:"borrow_status,5" db:"borrow_status" json:"borrow_status"`
	ProtoStatus          int32  `thrift:"proto_status,6" db:"proto_status" json:"proto_status"`
	StationStatus        int32  `thrift:"station_status,7" db:"station_status" json:"station_status"`
	GuideStatus          int32  `thrift:"guide_status,8" db:"guide_status" json:"guide_status"`
	SoundStatus          int32  `thrift:"sound_status,9" db:"sound_status" json:"sound_status"`
	ChengHuiTongTraceLog string `thrift:"chengHuiTongTraceLog,10" db:"chengHuiTongTraceLog" json:"chengHuiTongTraceLog"`
}

// func NewSetMsgDealRequestStruct() *SetMsgDealRequestStruct {
// 	return &SetMsgDealRequestStruct{}
// }

func (p *SetMsgDealRequestStruct) GetUserID() int32 {
	return p.UserID
}

func (p *SetMsgDealRequestStruct) GetAddtime() int32 {
	return p.Addtime
}

func (p *SetMsgDealRequestStruct) GetStatus() int32 {
	return p.Status
}

func (p *SetMsgDealRequestStruct) GetTenderStatus() int32 {
	return p.TenderStatus
}

func (p *SetMsgDealRequestStruct) GetBorrowStatus() int32 {
	return p.BorrowStatus
}

func (p *SetMsgDealRequestStruct) GetProtoStatus() int32 {
	return p.ProtoStatus
}

func (p *SetMsgDealRequestStruct) GetStationStatus() int32 {
	return p.StationStatus
}

func (p *SetMsgDealRequestStruct) GetGuideStatus() int32 {
	return p.GuideStatus
}

func (p *SetMsgDealRequestStruct) GetSoundStatus() int32 {
	return p.SoundStatus
}

func (p *SetMsgDealRequestStruct) GetChengHuiTongTraceLog() string {
	return p.ChengHuiTongTraceLog
}
func (p *SetMsgDealRequestStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.UserID = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Addtime = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.TenderStatus = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.BorrowStatus = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.ProtoStatus = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.StationStatus = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.GuideStatus = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.SoundStatus = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.ChengHuiTongTraceLog = v
	}
	return nil
}

func (p *SetMsgDealRequestStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SetMsgDealRequestStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
		if err := p.writeField3(oprot); err != nil {
			return err
		}
		if err := p.writeField4(oprot); err != nil {
			return err
		}
		if err := p.writeField5(oprot); err != nil {
			return err
		}
		if err := p.writeField6(oprot); err != nil {
			return err
		}
		if err := p.writeField7(oprot); err != nil {
			return err
		}
		if err := p.writeField8(oprot); err != nil {
			return err
		}
		if err := p.writeField9(oprot); err != nil {
			return err
		}
		if err := p.writeField10(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgDealRequestStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("user_id", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:user_id: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.UserID)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.user_id (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:user_id: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("addtime", thrift.I32, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:addtime: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Addtime)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.addtime (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:addtime: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 3); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (3) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 3:status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("tender_status", thrift.I32, 4); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:tender_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.TenderStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.tender_status (4) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 4:tender_status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("borrow_status", thrift.I32, 5); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:borrow_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.BorrowStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.borrow_status (5) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 5:borrow_status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("proto_status", thrift.I32, 6); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:proto_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.ProtoStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.proto_status (6) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 6:proto_status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("station_status", thrift.I32, 7); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:station_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.StationStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.station_status (7) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 7:station_status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("guide_status", thrift.I32, 8); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:guide_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.GuideStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.guide_status (8) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 8:guide_status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sound_status", thrift.I32, 9); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:sound_status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.SoundStatus)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.sound_status (9) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 9:sound_status: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("chengHuiTongTraceLog", thrift.STRING, 10); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:chengHuiTongTraceLog: ", p), err)
	}
	if err := oprot.WriteString(string(p.ChengHuiTongTraceLog)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.chengHuiTongTraceLog (10) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 10:chengHuiTongTraceLog: ", p), err)
	}
	return err
}

func (p *SetMsgDealRequestStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgDealRequestStruct(%+v)", *p)
}

// Attributes:
//  - Status
//  - Msg
type SetMsgDealResponseStruct struct {
	Status int32  `thrift:"status,1" db:"status" json:"status"`
	Msg    string `thrift:"msg,2" db:"msg" json:"msg"`
}

func NewSetMsgDealResponseStruct() *SetMsgDealResponseStruct {
	return &SetMsgDealResponseStruct{}
}

func (p *SetMsgDealResponseStruct) GetStatus() int32 {
	return p.Status
}

func (p *SetMsgDealResponseStruct) GetMsg() string {
	return p.Msg
}
func (p *SetMsgDealResponseStruct) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgDealResponseStruct) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 1: ", err)
	} else {
		p.Status = v
	}
	return nil
}

func (p *SetMsgDealResponseStruct) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.Msg = v
	}
	return nil
}

func (p *SetMsgDealResponseStruct) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("SetMsgDealResponseStruct"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
		if err := p.writeField2(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgDealResponseStruct) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("status", thrift.I32, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:status: ", p), err)
	}
	if err := oprot.WriteI32(int32(p.Status)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.status (1) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:status: ", p), err)
	}
	return err
}

func (p *SetMsgDealResponseStruct) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("msg", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:msg: ", p), err)
	}
	if err := oprot.WriteString(string(p.Msg)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.msg (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:msg: ", p), err)
	}
	return err
}

func (p *SetMsgDealResponseStruct) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgDealResponseStruct(%+v)", *p)
}

type SetMsgThriftService interface {
	// Parameters:
	//  - RequestObj
	GetSetMsgDetails(requestObj *SetMsgDetailsRequestStruct) (r *SetMsgDetailsResponseStruct, err error)
	// Parameters:
	//  - RequestObj
	UpdateSetMsgDetails(requestObj *SetMsgDealRequestStruct) (r *SetMsgDealResponseStruct, err error)
	// Parameters:
	//  - RequestObj
	InsertSetMsgDetails(requestObj *SetMsgDealRequestStruct) (r *SetMsgDealResponseStruct, err error)
}

type SetMsgThriftServiceClient struct {
	Transport       thrift.TTransport
	ProtocolFactory thrift.TProtocolFactory
	InputProtocol   thrift.TProtocol
	OutputProtocol  thrift.TProtocol
	SeqId           int32
}

func NewSetMsgThriftServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *SetMsgThriftServiceClient {
	return &SetMsgThriftServiceClient{Transport: t,
		ProtocolFactory: f,
		InputProtocol:   f.GetProtocol(t),
		OutputProtocol:  f.GetProtocol(t),
		SeqId:           0,
	}
}

func NewSetMsgThriftServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *SetMsgThriftServiceClient {
	return &SetMsgThriftServiceClient{Transport: t,
		ProtocolFactory: nil,
		InputProtocol:   iprot,
		OutputProtocol:  oprot,
		SeqId:           0,
	}
}

// Parameters:
//  - RequestObj
func (p *SetMsgThriftServiceClient) GetSetMsgDetails(requestObj *SetMsgDetailsRequestStruct) (r *SetMsgDetailsResponseStruct, err error) {
	if err = p.sendGetSetMsgDetails(requestObj); err != nil {
		return
	}
	return p.recvGetSetMsgDetails()
}

func (p *SetMsgThriftServiceClient) sendGetSetMsgDetails(requestObj *SetMsgDetailsRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("getSetMsgDetails", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := SetMsgThriftServiceGetSetMsgDetailsArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *SetMsgThriftServiceClient) recvGetSetMsgDetails() (value *SetMsgDetailsResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "getSetMsgDetails" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "getSetMsgDetails failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "getSetMsgDetails failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error0 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error1 error
		error1, err = error0.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error1
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "getSetMsgDetails failed: invalid message type")
		return
	}
	result := SetMsgThriftServiceGetSetMsgDetailsResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

// Parameters:
//  - RequestObj
func (p *SetMsgThriftServiceClient) UpdateSetMsgDetails(requestObj *SetMsgDealRequestStruct) (r *SetMsgDealResponseStruct, err error) {
	if err = p.sendUpdateSetMsgDetails(requestObj); err != nil {
		return
	}
	return p.recvUpdateSetMsgDetails()
}

func (p *SetMsgThriftServiceClient) sendUpdateSetMsgDetails(requestObj *SetMsgDealRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("updateSetMsgDetails", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := SetMsgThriftServiceUpdateSetMsgDetailsArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *SetMsgThriftServiceClient) recvUpdateSetMsgDetails() (value *SetMsgDealResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "updateSetMsgDetails" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "updateSetMsgDetails failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "updateSetMsgDetails failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error2 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error3 error
		error3, err = error2.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error3
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "updateSetMsgDetails failed: invalid message type")
		return
	}
	result := SetMsgThriftServiceUpdateSetMsgDetailsResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

// Parameters:
//  - RequestObj
func (p *SetMsgThriftServiceClient) InsertSetMsgDetails(requestObj *SetMsgDealRequestStruct) (r *SetMsgDealResponseStruct, err error) {
	if err = p.sendInsertSetMsgDetails(requestObj); err != nil {
		return
	}
	return p.recvInsertSetMsgDetails()
}

func (p *SetMsgThriftServiceClient) sendInsertSetMsgDetails(requestObj *SetMsgDealRequestStruct) (err error) {
	oprot := p.OutputProtocol
	if oprot == nil {
		oprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.OutputProtocol = oprot
	}
	p.SeqId++
	if err = oprot.WriteMessageBegin("insertSetMsgDetails", thrift.CALL, p.SeqId); err != nil {
		return
	}
	args := SetMsgThriftServiceInsertSetMsgDetailsArgs{
		RequestObj: requestObj,
	}
	if err = args.Write(oprot); err != nil {
		return
	}
	if err = oprot.WriteMessageEnd(); err != nil {
		return
	}
	return oprot.Flush()
}

func (p *SetMsgThriftServiceClient) recvInsertSetMsgDetails() (value *SetMsgDealResponseStruct, err error) {
	iprot := p.InputProtocol
	if iprot == nil {
		iprot = p.ProtocolFactory.GetProtocol(p.Transport)
		p.InputProtocol = iprot
	}
	method, mTypeId, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return
	}
	if method != "insertSetMsgDetails" {
		err = thrift.NewTApplicationException(thrift.WRONG_METHOD_NAME, "insertSetMsgDetails failed: wrong method name")
		return
	}
	if p.SeqId != seqId {
		err = thrift.NewTApplicationException(thrift.BAD_SEQUENCE_ID, "insertSetMsgDetails failed: out of sequence response")
		return
	}
	if mTypeId == thrift.EXCEPTION {
		error4 := thrift.NewTApplicationException(thrift.UNKNOWN_APPLICATION_EXCEPTION, "Unknown Exception")
		var error5 error
		error5, err = error4.Read(iprot)
		if err != nil {
			return
		}
		if err = iprot.ReadMessageEnd(); err != nil {
			return
		}
		err = error5
		return
	}
	if mTypeId != thrift.REPLY {
		err = thrift.NewTApplicationException(thrift.INVALID_MESSAGE_TYPE_EXCEPTION, "insertSetMsgDetails failed: invalid message type")
		return
	}
	result := SetMsgThriftServiceInsertSetMsgDetailsResult{}
	if err = result.Read(iprot); err != nil {
		return
	}
	if err = iprot.ReadMessageEnd(); err != nil {
		return
	}
	value = result.GetSuccess()
	return
}

type SetMsgThriftServiceProcessor struct {
	processorMap map[string]thrift.TProcessorFunction
	handler      SetMsgThriftService
}

func (p *SetMsgThriftServiceProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
	p.processorMap[key] = processor
}

func (p *SetMsgThriftServiceProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
	processor, ok = p.processorMap[key]
	return processor, ok
}

func (p *SetMsgThriftServiceProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
	return p.processorMap
}

func NewSetMsgThriftServiceProcessor(handler SetMsgThriftService) *SetMsgThriftServiceProcessor {

	self6 := &SetMsgThriftServiceProcessor{handler: handler, processorMap: make(map[string]thrift.TProcessorFunction)}
	self6.processorMap["getSetMsgDetails"] = &setMsgThriftServiceProcessorGetSetMsgDetails{handler: handler}
	self6.processorMap["updateSetMsgDetails"] = &setMsgThriftServiceProcessorUpdateSetMsgDetails{handler: handler}
	self6.processorMap["insertSetMsgDetails"] = &setMsgThriftServiceProcessorInsertSetMsgDetails{handler: handler}
	return self6
}

func (p *SetMsgThriftServiceProcessor) Process(iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	name, _, seqId, err := iprot.ReadMessageBegin()
	if err != nil {
		return false, err
	}
	if processor, ok := p.GetProcessorFunction(name); ok {
		return processor.Process(seqId, iprot, oprot)
	}
	iprot.Skip(thrift.STRUCT)
	iprot.ReadMessageEnd()
	x7 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function "+name)
	oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
	x7.Write(oprot)
	oprot.WriteMessageEnd()
	oprot.Flush()
	return false, x7

}

type setMsgThriftServiceProcessorGetSetMsgDetails struct {
	handler SetMsgThriftService
}

func (p *setMsgThriftServiceProcessorGetSetMsgDetails) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := SetMsgThriftServiceGetSetMsgDetailsArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("getSetMsgDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := SetMsgThriftServiceGetSetMsgDetailsResult{}
	var retval *SetMsgDetailsResponseStruct
	var err2 error
	if retval, err2 = p.handler.GetSetMsgDetails(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getSetMsgDetails: "+err2.Error())
		oprot.WriteMessageBegin("getSetMsgDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("getSetMsgDetails", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type setMsgThriftServiceProcessorUpdateSetMsgDetails struct {
	handler SetMsgThriftService
}

func (p *setMsgThriftServiceProcessorUpdateSetMsgDetails) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := SetMsgThriftServiceUpdateSetMsgDetailsArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("updateSetMsgDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := SetMsgThriftServiceUpdateSetMsgDetailsResult{}
	var retval *SetMsgDealResponseStruct
	var err2 error
	if retval, err2 = p.handler.UpdateSetMsgDetails(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing updateSetMsgDetails: "+err2.Error())
		oprot.WriteMessageBegin("updateSetMsgDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("updateSetMsgDetails", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

type setMsgThriftServiceProcessorInsertSetMsgDetails struct {
	handler SetMsgThriftService
}

func (p *setMsgThriftServiceProcessorInsertSetMsgDetails) Process(seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
	args := SetMsgThriftServiceInsertSetMsgDetailsArgs{}
	if err = args.Read(iprot); err != nil {
		iprot.ReadMessageEnd()
		x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
		oprot.WriteMessageBegin("insertSetMsgDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return false, err
	}

	iprot.ReadMessageEnd()
	result := SetMsgThriftServiceInsertSetMsgDetailsResult{}
	var retval *SetMsgDealResponseStruct
	var err2 error
	if retval, err2 = p.handler.InsertSetMsgDetails(args.RequestObj); err2 != nil {
		x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing insertSetMsgDetails: "+err2.Error())
		oprot.WriteMessageBegin("insertSetMsgDetails", thrift.EXCEPTION, seqId)
		x.Write(oprot)
		oprot.WriteMessageEnd()
		oprot.Flush()
		return true, err2
	} else {
		result.Success = retval
	}
	if err2 = oprot.WriteMessageBegin("insertSetMsgDetails", thrift.REPLY, seqId); err2 != nil {
		err = err2
	}
	if err2 = result.Write(oprot); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
		err = err2
	}
	if err2 = oprot.Flush(); err == nil && err2 != nil {
		err = err2
	}
	if err != nil {
		return
	}
	return true, err
}

// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - RequestObj
type SetMsgThriftServiceGetSetMsgDetailsArgs struct {
	RequestObj *SetMsgDetailsRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewSetMsgThriftServiceGetSetMsgDetailsArgs() *SetMsgThriftServiceGetSetMsgDetailsArgs {
	return &SetMsgThriftServiceGetSetMsgDetailsArgs{}
}

var SetMsgThriftServiceGetSetMsgDetailsArgs_RequestObj_DEFAULT *SetMsgDetailsRequestStruct

func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) GetRequestObj() *SetMsgDetailsRequestStruct {
	if !p.IsSetRequestObj() {
		return SetMsgThriftServiceGetSetMsgDetailsArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &SetMsgDetailsRequestStruct{}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("getSetMsgDetails_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *SetMsgThriftServiceGetSetMsgDetailsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgThriftServiceGetSetMsgDetailsArgs(%+v)", *p)
}

// Attributes:
//  - Success
type SetMsgThriftServiceGetSetMsgDetailsResult struct {
	Success *SetMsgDetailsResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewSetMsgThriftServiceGetSetMsgDetailsResult() *SetMsgThriftServiceGetSetMsgDetailsResult {
	return &SetMsgThriftServiceGetSetMsgDetailsResult{}
}

var SetMsgThriftServiceGetSetMsgDetailsResult_Success_DEFAULT *SetMsgDetailsResponseStruct

func (p *SetMsgThriftServiceGetSetMsgDetailsResult) GetSuccess() *SetMsgDetailsResponseStruct {
	if !p.IsSetSuccess() {
		return SetMsgThriftServiceGetSetMsgDetailsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *SetMsgThriftServiceGetSetMsgDetailsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &SetMsgDetailsResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("getSetMsgDetails_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgThriftServiceGetSetMsgDetailsResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *SetMsgThriftServiceGetSetMsgDetailsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgThriftServiceGetSetMsgDetailsResult(%+v)", *p)
}

// Attributes:
//  - RequestObj
type SetMsgThriftServiceUpdateSetMsgDetailsArgs struct {
	RequestObj *SetMsgDealRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewSetMsgThriftServiceUpdateSetMsgDetailsArgs() *SetMsgThriftServiceUpdateSetMsgDetailsArgs {
	return &SetMsgThriftServiceUpdateSetMsgDetailsArgs{}
}

var SetMsgThriftServiceUpdateSetMsgDetailsArgs_RequestObj_DEFAULT *SetMsgDealRequestStruct

func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) GetRequestObj() *SetMsgDealRequestStruct {
	if !p.IsSetRequestObj() {
		return SetMsgThriftServiceUpdateSetMsgDetailsArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &SetMsgDealRequestStruct{}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("updateSetMsgDetails_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgThriftServiceUpdateSetMsgDetailsArgs(%+v)", *p)
}

// Attributes:
//  - Success
type SetMsgThriftServiceUpdateSetMsgDetailsResult struct {
	Success *SetMsgDealResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewSetMsgThriftServiceUpdateSetMsgDetailsResult() *SetMsgThriftServiceUpdateSetMsgDetailsResult {
	return &SetMsgThriftServiceUpdateSetMsgDetailsResult{}
}

var SetMsgThriftServiceUpdateSetMsgDetailsResult_Success_DEFAULT *SetMsgDealResponseStruct

func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) GetSuccess() *SetMsgDealResponseStruct {
	if !p.IsSetSuccess() {
		return SetMsgThriftServiceUpdateSetMsgDetailsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &SetMsgDealResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("updateSetMsgDetails_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *SetMsgThriftServiceUpdateSetMsgDetailsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgThriftServiceUpdateSetMsgDetailsResult(%+v)", *p)
}

// Attributes:
//  - RequestObj
type SetMsgThriftServiceInsertSetMsgDetailsArgs struct {
	RequestObj *SetMsgDealRequestStruct `thrift:"requestObj,1" db:"requestObj" json:"requestObj"`
}

func NewSetMsgThriftServiceInsertSetMsgDetailsArgs() *SetMsgThriftServiceInsertSetMsgDetailsArgs {
	return &SetMsgThriftServiceInsertSetMsgDetailsArgs{}
}

var SetMsgThriftServiceInsertSetMsgDetailsArgs_RequestObj_DEFAULT *SetMsgDealRequestStruct

func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) GetRequestObj() *SetMsgDealRequestStruct {
	if !p.IsSetRequestObj() {
		return SetMsgThriftServiceInsertSetMsgDetailsArgs_RequestObj_DEFAULT
	}
	return p.RequestObj
}
func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) IsSetRequestObj() bool {
	return p.RequestObj != nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) ReadField1(iprot thrift.TProtocol) error {
	p.RequestObj = &SetMsgDealRequestStruct{}
	if err := p.RequestObj.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.RequestObj), err)
	}
	return nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("insertSetMsgDetails_args"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField1(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("requestObj", thrift.STRUCT, 1); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:requestObj: ", p), err)
	}
	if err := p.RequestObj.Write(oprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.RequestObj), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 1:requestObj: ", p), err)
	}
	return err
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgThriftServiceInsertSetMsgDetailsArgs(%+v)", *p)
}

// Attributes:
//  - Success
type SetMsgThriftServiceInsertSetMsgDetailsResult struct {
	Success *SetMsgDealResponseStruct `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewSetMsgThriftServiceInsertSetMsgDetailsResult() *SetMsgThriftServiceInsertSetMsgDetailsResult {
	return &SetMsgThriftServiceInsertSetMsgDetailsResult{}
}

var SetMsgThriftServiceInsertSetMsgDetailsResult_Success_DEFAULT *SetMsgDealResponseStruct

func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) GetSuccess() *SetMsgDealResponseStruct {
	if !p.IsSetSuccess() {
		return SetMsgThriftServiceInsertSetMsgDetailsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 0:
			if err := p.ReadField0(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	return nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) ReadField0(iprot thrift.TProtocol) error {
	p.Success = &SetMsgDealResponseStruct{}
	if err := p.Success.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
	}
	return nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("insertSetMsgDetails_result"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if p != nil {
		if err := p.writeField0(oprot); err != nil {
			return err
		}
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) writeField0(oprot thrift.TProtocol) (err error) {
	if p.IsSetSuccess() {
		if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err)
		}
		if err := p.Success.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err)
		}
	}
	return err
}

func (p *SetMsgThriftServiceInsertSetMsgDetailsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SetMsgThriftServiceInsertSetMsgDetailsResult(%+v)", *p)
}
